{"version":3,"sources":["../src/router-config.js","../src/utils.js","../src/triggers/click.js","../src/triggers/popstate.js","../node_modules/path-to-regexp/index.js","../src/resolver/matchPath.js","../src/resolver/matchRoute.js","../src/resolver/resolveRoute.js","../src/resolver/resolver.js","../src/resolver/generateUrls.js","../src/triggers/setNavigationTriggers.js","../src/transitions/animate.js","../src/router.js","../node_modules/@vaadin/vaadin-development-mode-detector/vaadin-development-mode-detector.js","../node_modules/@vaadin/vaadin-usage-statistics/vaadin-usage-statistics-collect.js","../src/router-meta.js","../src/lib/dom.ts","../src/lib/template.ts","../src/lib/modify-template.ts","../src/lib/directive.ts","../src/lib/part.ts","../src/lib/template-instance.ts","../src/lib/template-result.ts","../src/lib/parts.ts","../src/lib/template-factory.ts","../src/lib/render.ts","../src/lib/default-template-processor.ts","src/lit-html.ts","../src/lib/shady-render.ts","../src/lib/updating-element.ts","../src/lib/decorators.ts","../src/lib/css-tag.ts","src/lit-element.ts","elements/logoSpinner.js","helpers/fontsStyles.js","pages/homePage.js","pages/home-page.js","pages/dashboardPage.js","pages/dashboard-page.js","pages/testPage.js","pages/test-page.js","init.js"],"names":["pathToRegexp","cache","LogoSpinner","LitElement","properties","status","type","String","constructor","myStatus","styles","render","customElements","define","fontscss","HomePage","user","password","handleClick","doLogin","setValue","clickShow","close","shadowRoot","querySelector","classList","toggle","e","node","target","checked","closeModal","resetLogo","setTimeout","resetForm","name","value","event","preventDefault","custom","CustomEvent","composed","bubbles","dispatchEvent","DashboardPage","data","dataset","url","TestPage","items","Array","title","resAnterior","resActual","map","i","outlet","document","getElementById","router","Router","setRoutes","path","animate","children","component","addEventListener","detail","go"],"mappings":"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","file":"init.d60ddbb2.js","sourceRoot":"../src","sourcesContent":["import CLICK from './triggers/click.js';\nimport POPSTATE from './triggers/popstate.js';\nimport {Router} from './router.js';\nimport './router-meta.js';\nRouter.NavigationTrigger = {POPSTATE, CLICK};\nexport {Router};\n","export function toArray(objectOrArray) {\n  objectOrArray = objectOrArray || [];\n  return Array.isArray(objectOrArray) ? objectOrArray : [objectOrArray];\n}\n\nexport function log(msg) {\n  return `[Vaadin.Router] ${msg}`;\n}\n\nexport function logValue(value) {\n  if (typeof value !== 'object') {\n    return String(value);\n  }\n\n  const stringType = Object.prototype.toString.call(value).match(/ (.*)\\]$/)[1];\n  if (stringType === 'Object' || stringType === 'Array') {\n    return `${stringType} ${JSON.stringify(value)}`;\n  } else {\n    return stringType;\n  }\n}\n\nconst MODULE = 'module';\nconst NOMODULE = 'nomodule';\nconst bundleKeys = [MODULE, NOMODULE];\n\nfunction ensureBundle(src) {\n  if (!src.match(/.+\\.[m]?js$/)) {\n    throw new Error(\n      log(`Unsupported type for bundle \"${src}\": .js or .mjs expected.`)\n    );\n  }\n}\n\nexport function ensureRoute(route) {\n  if (!route || !isString(route.path)) {\n    throw new Error(\n      log(`Expected route config to be an object with a \"path\" string property, or an array of such objects`)\n    );\n  }\n\n  const bundle = route.bundle;\n\n  const stringKeys = ['component', 'redirect', 'bundle'];\n  if (\n    !isFunction(route.action) &&\n    !Array.isArray(route.children) &&\n    !isFunction(route.children) &&\n    !isObject(bundle) &&\n    !stringKeys.some(key => isString(route[key]))\n  ) {\n    throw new Error(\n      log(\n        `Expected route config \"${route.path}\" to include either \"${stringKeys.join('\", \"')}\" ` +\n        `or \"action\" function but none found.`\n      )\n    );\n  }\n\n  if (bundle) {\n    if (isString(bundle)) {\n      ensureBundle(bundle);\n    } else if (!bundleKeys.some(key => key in bundle)) {\n      throw new Error(\n        log('Expected route bundle to include either \"' + NOMODULE + '\" or \"' + MODULE + '\" keys, or both')\n      );\n    } else {\n      bundleKeys.forEach(key => key in bundle && ensureBundle(bundle[key]));\n    }\n  }\n\n  if (route.redirect) {\n    ['bundle', 'component'].forEach(overriddenProp => {\n      if (overriddenProp in route) {\n        console.warn(\n          log(\n            `Route config \"${route.path}\" has both \"redirect\" and \"${overriddenProp}\" properties, ` +\n            `and \"redirect\" will always override the latter. Did you mean to only use \"${overriddenProp}\"?`\n          )\n        );\n      }\n    });\n  }\n}\n\nexport function ensureRoutes(routes) {\n  toArray(routes).forEach(route => ensureRoute(route));\n}\n\nfunction loadScript(src, key) {\n  let script = document.head.querySelector('script[src=\"' + src + '\"][async]');\n  if (!script) {\n    script = document.createElement('script');\n    script.setAttribute('src', src);\n    if (key === MODULE) {\n      script.setAttribute('type', MODULE);\n    } else if (key === NOMODULE) {\n      script.setAttribute(NOMODULE, '');\n    }\n    script.async = true;\n  }\n  return new Promise((resolve, reject) => {\n    script.onreadystatechange = script.onload = e => {\n      script.__dynamicImportLoaded = true;\n      resolve(e);\n    };\n    script.onerror = e => {\n      if (script.parentNode) {\n        script.parentNode.removeChild(script);\n      }\n      reject(e);\n    };\n    if (script.parentNode === null) {\n      document.head.appendChild(script);\n    } else if (script.__dynamicImportLoaded) {\n      resolve();\n    }\n  });\n}\n\nexport function loadBundle(bundle) {\n  if (isString(bundle)) {\n    return loadScript(bundle);\n  } else {\n    return Promise.race(\n      bundleKeys\n        .filter(key => key in bundle)\n        .map(key => loadScript(bundle[key], key))\n    );\n  }\n}\n\nexport function fireRouterEvent(type, detail) {\n  return !window.dispatchEvent(new CustomEvent(\n    `vaadin-router-${type}`,\n    {cancelable: type === 'go', detail}\n  ));\n}\n\nexport function isObject(o) {\n  // guard against null passing the typeof check\n  return typeof o === 'object' && !!o;\n}\n\nexport function isFunction(f) {\n  return typeof f === 'function';\n}\n\nexport function isString(s) {\n  return typeof s === 'string';\n}\n\nexport function getNotFoundError(context) {\n  const error = new Error(log(`Page not found (${context.pathname})`));\n  error.context = context;\n  error.code = 404;\n  return error;\n}\n\nexport const notFoundResult = new (class NotFoundResult {})();\n","import {fireRouterEvent} from '../utils.js';\n\n/* istanbul ignore next: coverage is calculated in Chrome, this code is for IE */\nfunction getAnchorOrigin(anchor) {\n  // IE11: on HTTP and HTTPS the default port is not included into\n  // window.location.origin, so won't include it here either.\n  const port = anchor.port;\n  const protocol = anchor.protocol;\n  const defaultHttp = protocol === 'http:' && port === '80';\n  const defaultHttps = protocol === 'https:' && port === '443';\n  const host = (defaultHttp || defaultHttps)\n    ? anchor.hostname // does not include the port number (e.g. www.example.org)\n    : anchor.host; // does include the port number (e.g. www.example.org:80)\n  return `${protocol}//${host}`;\n}\n\n// The list of checks is not complete:\n//  - SVG support is missing\n//  - the 'rel' attribute is not considered\nfunction vaadinRouterGlobalClickHandler(event) {\n  // ignore the click if the default action is prevented\n  if (event.defaultPrevented) {\n    return;\n  }\n\n  // ignore the click if not with the primary mouse button\n  if (event.button !== 0) {\n    return;\n  }\n\n  // ignore the click if a modifier key is pressed\n  if (event.shiftKey || event.ctrlKey || event.altKey || event.metaKey) {\n    return;\n  }\n\n  // find the <a> element that the click is at (or within)\n  let anchor = event.target;\n  const path = event.composedPath\n    ? event.composedPath()\n    : (event.path || []);\n\n  // FIXME(web-padawan): `Symbol.iterator` used by webcomponentsjs is broken for arrays\n  // example to check: `for...of` loop here throws the \"Not yet implemented\" error\n  for (let i = 0; i < path.length; i++) {\n    const target = path[i];\n    if (target.nodeName && target.nodeName.toLowerCase() === 'a') {\n      anchor = target;\n      break;\n    }\n  }\n\n  while (anchor && anchor.nodeName.toLowerCase() !== 'a') {\n    anchor = anchor.parentNode;\n  }\n\n  // ignore the click if not at an <a> element\n  if (!anchor || anchor.nodeName.toLowerCase() !== 'a') {\n    return;\n  }\n\n  // ignore the click if the <a> element has a non-default target\n  if (anchor.target && anchor.target.toLowerCase() !== '_self') {\n    return;\n  }\n\n  // ignore the click if the <a> element has the 'download' attribute\n  if (anchor.hasAttribute('download')) {\n    return;\n  }\n\n  // ignore the click if the <a> element has the 'router-ignore' attribute\n  if (anchor.hasAttribute('router-ignore')) {\n    return;\n  }\n\n  // ignore the click if the target URL is a fragment on the current page\n  if (anchor.pathname === window.location.pathname && anchor.hash !== '') {\n    return;\n  }\n\n  // ignore the click if the target is external to the app\n  // In IE11 HTMLAnchorElement does not have the `origin` property\n  const origin = anchor.origin || getAnchorOrigin(anchor);\n  if (origin !== window.location.origin) {\n    return;\n  }\n\n  // if none of the above, convert the click into a navigation event\n  const {pathname, search, hash} = anchor;\n  if (fireRouterEvent('go', {pathname, search, hash})) {\n    event.preventDefault();\n  }\n}\n\n/**\n * A navigation trigger for Vaadin Router that translated clicks on `<a>` links\n * into Vaadin Router navigation events.\n *\n * Only regular clicks on in-app links are translated (primary mouse button, no\n * modifier keys, the target href is within the app's URL space).\n *\n * @memberOf Router.NavigationTrigger\n * @type {NavigationTrigger}\n */\nconst CLICK = {\n  activate() {\n    window.document.addEventListener('click', vaadinRouterGlobalClickHandler);\n  },\n\n  inactivate() {\n    window.document.removeEventListener('click', vaadinRouterGlobalClickHandler);\n  }\n};\n\nexport default CLICK;\n","import {fireRouterEvent, isFunction} from '../utils.js';\n\n// PopStateEvent constructor shim\nconst isIE = /Trident/.test(navigator.userAgent);\n\n/* istanbul ignore next: coverage is calculated in Chrome, this code is for IE */\nif (isIE && !isFunction(window.PopStateEvent)) {\n  window.PopStateEvent = function(inType, params) {\n    params = params || {};\n    var e = document.createEvent('Event');\n    e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable));\n    e.state = params.state || null;\n    return e;\n  };\n  window.PopStateEvent.prototype = window.Event.prototype;\n}\n\nfunction vaadinRouterGlobalPopstateHandler(event) {\n  if (event.state === 'vaadin-router-ignore') {\n    return;\n  }\n  const {pathname, search, hash} = window.location;\n  fireRouterEvent('go', {pathname, search, hash});\n}\n\n/**\n * A navigation trigger for Vaadin Router that translates popstate events into\n * Vaadin Router navigation events.\n *\n * @memberOf Router.NavigationTrigger\n * @type {NavigationTrigger}\n */\nconst POPSTATE = {\n  activate() {\n    window.addEventListener('popstate', vaadinRouterGlobalPopstateHandler);\n  },\n\n  inactivate() {\n    window.removeEventListener('popstate', vaadinRouterGlobalPopstateHandler);\n  }\n};\n\nexport default POPSTATE;\n","/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/'\nvar DEFAULT_DELIMITERS = './'\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \":test(\\\\d+)?\" => [\"test\", \"\\d+\", undefined, \"?\"]\n  // \"(\\\\d+)\"  => [undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER\n  var delimiters = (options && options.delimiters) || DEFAULT_DELIMITERS\n  var pathEscaped = false\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      pathEscaped = true\n      continue\n    }\n\n    var prev = ''\n    var next = str[index]\n    var name = res[2]\n    var capture = res[3]\n    var group = res[4]\n    var modifier = res[5]\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1\n\n      if (delimiters.indexOf(path[k]) > -1) {\n        prev = path[k]\n        path = path.slice(0, k)\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n      pathEscaped = false\n    }\n\n    var partial = prev !== '' && next !== undefined && next !== prev\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = prev || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      pattern: pattern ? escapeGroup(pattern) : '[^' + escapeString(delimiter) + ']+?'\n    })\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index))\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\n    }\n  }\n\n  return function (data, options) {\n    var path = ''\n    var encode = (options && options.encode) || encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined\n      var segment\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j], token)\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value), token)\n\n        if (!matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment\n        continue\n      }\n\n      if (token.optional) {\n        // Prepend partial segment prefixes.\n        if (token.partial) path += token.prefix\n\n        continue\n      }\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        pattern: null\n      })\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {}\n\n  var strict = options.strict\n  var start = options.start !== false\n  var end = options.end !== false\n  var delimiter = escapeString(options.delimiter || DEFAULT_DELIMITER)\n  var delimiters = options.delimiters || DEFAULT_DELIMITERS\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|')\n  var route = start ? '^' : ''\n  var isEndDelimited = tokens.length === 0\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n      isEndDelimited = i === tokens.length - 1 && delimiters.indexOf(token[token.length - 1]) > -1\n    } else {\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + escapeString(token.delimiter) + '(?:' + token.pattern + '))*'\n        : token.pattern\n\n      if (keys) keys.push(token)\n\n      if (token.optional) {\n        if (token.partial) {\n          route += escapeString(token.prefix) + '(' + capture + ')?'\n        } else {\n          route += '(?:' + escapeString(token.prefix) + '(' + capture + '))?'\n        }\n      } else {\n        route += escapeString(token.prefix) + '(' + capture + ')'\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + delimiter + ')?'\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')'\n  } else {\n    if (!strict) route += '(?:' + delimiter + '(?=' + endsWith + '))?'\n    if (!isEndDelimited) route += '(?=' + delimiter + '|' + endsWith + ')'\n  }\n\n  return new RegExp(route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport pathToRegexp from './path-to-regexp.js';\n\nconst {hasOwnProperty} = Object.prototype;\nconst cache = new Map();\n// see https://github.com/pillarjs/path-to-regexp/issues/148\ncache.set('|false', {\n  keys: [],\n  pattern: /(?:)/\n});\n\nfunction decodeParam(val) {\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    return val;\n  }\n}\n\nfunction matchPath(routepath, path, exact, parentKeys, parentParams) {\n  exact = !!exact;\n  const cacheKey = `${routepath}|${exact}`;\n  let regexp = cache.get(cacheKey);\n\n  if (!regexp) {\n    const keys = [];\n    regexp = {\n      keys,\n      pattern: pathToRegexp(routepath, keys, {\n        end: exact,\n        strict: routepath === ''\n      }),\n    };\n    cache.set(cacheKey, regexp);\n  }\n\n  const m = regexp.pattern.exec(path);\n  if (!m) {\n    return null;\n  }\n\n  const params = Object.assign({}, parentParams);\n\n  for (let i = 1; i < m.length; i++) {\n    const key = regexp.keys[i - 1];\n    const prop = key.name;\n    const value = m[i];\n    if (value !== undefined || !hasOwnProperty.call(params, prop)) {\n      if (key.repeat) {\n        params[prop] = value ? value.split(key.delimiter).map(decodeParam) : [];\n      } else {\n        params[prop] = value ? decodeParam(value) : value;\n      }\n    }\n  }\n\n  return {\n    path: m[0],\n    keys: (parentKeys || []).concat(regexp.keys),\n    params,\n  };\n}\n\nexport default matchPath;\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport matchPath from './matchPath.js';\n\n/**\n * Traverses the routes tree and matches its nodes to the given pathname from\n * the root down to the leaves. Each match consumes a part of the pathname and\n * the matching process continues for as long as there is a matching child\n * route for the remaining part of the pathname.\n *\n * The returned value is a lazily evaluated iterator.\n *\n * The leading \"/\" in a route path matters only for the root of the routes\n * tree (or if all parent routes are \"\"). In all other cases a leading \"/\" in\n * a child route path has no significance.\n *\n * The trailing \"/\" in a _route path_ matters only for the leaves of the\n * routes tree. A leaf route with a trailing \"/\" matches only a pathname that\n * also has a trailing \"/\".\n *\n * The trailing \"/\" in a route path does not affect matching of child routes\n * in any way.\n *\n * The trailing \"/\" in a _pathname_ generally does not matter (except for\n * the case of leaf nodes described above).\n *\n * The \"\" and \"/\" routes have special treatment:\n *  1. as a single route\n *     the \"\" and \"/\" routes match only the \"\" and \"/\" pathnames respectively\n *  2. as a parent in the routes tree\n *     the \"\" route matches any pathname without consuming any part of it\n *     the \"/\" route matches any absolute pathname consuming its leading \"/\"\n *  3. as a leaf in the routes tree\n *     the \"\" and \"/\" routes match only if the entire pathname is consumed by\n *         the parent routes chain. In this case \"\" and \"/\" are equivalent.\n *  4. several directly nested \"\" or \"/\" routes\n *     - directly nested \"\" or \"/\" routes are 'squashed' (i.e. nesting two\n *       \"/\" routes does not require a double \"/\" in the pathname to match)\n *     - if there are only \"\" in the parent routes chain, no part of the\n *       pathname is consumed, and the leading \"/\" in the child routes' paths\n *       remains significant\n *\n * Side effect:\n *   - the routes tree { path: '' } matches only the '' pathname\n *   - the routes tree { path: '', children: [ { path: '' } ] } matches any\n *     pathname (for the tree root)\n *\n * Prefix matching can be enabled also by `children: true`.\n */\nfunction matchRoute(route, pathname, ignoreLeadingSlash, parentKeys, parentParams) {\n  let match;\n  let childMatches;\n  let childIndex = 0;\n  let routepath = route.path || '';\n  if (routepath.charAt(0) === '/') {\n    if (ignoreLeadingSlash) {\n      routepath = routepath.substr(1);\n    }\n    ignoreLeadingSlash = true;\n  }\n\n  return {\n    next(routeToSkip) {\n      if (route === routeToSkip) {\n        return {done: true};\n      }\n\n      const children = route.__children = route.__children || route.children;\n\n      if (!match) {\n        match = matchPath(routepath, pathname, !children, parentKeys, parentParams);\n\n        if (match) {\n          return {\n            done: false,\n            value: {\n              route,\n              keys: match.keys,\n              params: match.params,\n              path: match.path\n            },\n          };\n        }\n      }\n\n      if (match && children) {\n        while (childIndex < children.length) {\n          if (!childMatches) {\n            const childRoute = children[childIndex];\n            childRoute.parent = route;\n\n            let matchedLength = match.path.length;\n            if (matchedLength > 0 && pathname.charAt(matchedLength) === '/') {\n              matchedLength += 1;\n            }\n\n            childMatches = matchRoute(\n              childRoute,\n              pathname.substr(matchedLength),\n              ignoreLeadingSlash,\n              match.keys,\n              match.params\n            );\n          }\n\n          const childMatch = childMatches.next(routeToSkip);\n          if (!childMatch.done) {\n            return {\n              done: false,\n              value: childMatch.value,\n            };\n          }\n\n          childMatches = null;\n          childIndex++;\n        }\n      }\n\n      return {done: true};\n    },\n  };\n}\n\nexport default matchRoute;\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport {isFunction} from '../utils.js';\n\nfunction resolveRoute(context) {\n  if (isFunction(context.route.action)) {\n    return context.route.action(context);\n  }\n  return undefined;\n}\n\nexport default resolveRoute;\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport pathToRegexp from './path-to-regexp.js';\nimport matchRoute from './matchRoute.js';\nimport resolveRoute from './resolveRoute.js';\nimport {toArray, ensureRoutes, isString, getNotFoundError, notFoundResult} from '../utils.js';\n\nfunction isChildRoute(parentRoute, childRoute) {\n  let route = childRoute;\n  while (route) {\n    route = route.parent;\n    if (route === parentRoute) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction generateErrorMessage(currentContext) {\n  let errorMessage = `Path '${currentContext.pathname}' is not properly resolved due to an error.`;\n  const routePath = (currentContext.route || {}).path;\n  if (routePath) {\n    errorMessage += ` Resolution had failed on route: '${routePath}'`;\n  }\n  return errorMessage;\n}\n\nfunction updateChainForRoute(context, match) {\n  const {route, path} = match;\n\n  if (route && !route.__synthetic) {\n    const item = {path, route};\n    if (!context.chain) {\n      context.chain = [];\n    } else {\n      // Discard old items\n      if (route.parent) {\n        let i = context.chain.length;\n        while (i-- && context.chain[i].route && context.chain[i].route !== route.parent) {\n          context.chain.pop();\n        }\n      }\n    }\n    context.chain.push(item);\n  }\n}\n\n/**\n */\nclass Resolver {\n  constructor(routes, options = {}) {\n    if (Object(routes) !== routes) {\n      throw new TypeError('Invalid routes');\n    }\n\n    this.baseUrl = options.baseUrl || '';\n    this.errorHandler = options.errorHandler;\n    this.resolveRoute = options.resolveRoute || resolveRoute;\n    this.context = Object.assign({resolver: this}, options.context);\n    this.root = Array.isArray(routes) ? {path: '', __children: routes, parent: null, __synthetic: true} : routes;\n    this.root.parent = null;\n  }\n\n  /**\n   * Returns the current list of routes (as a shallow copy). Adding / removing\n   * routes to / from the returned array does not affect the routing config,\n   * but modifying the route objects does.\n   *\n   * @return {!Array<!Router.Route>}\n   */\n  getRoutes() {\n    return [...this.root.__children];\n  }\n\n  /**\n   * Sets the routing config (replacing the existing one).\n   *\n   * @param {!Array<!Router.Route>|!Router.Route} routes a single route or an array of those\n   *    (the array is shallow copied)\n   */\n  setRoutes(routes) {\n    ensureRoutes(routes);\n    const newRoutes = [...toArray(routes)];\n    this.root.__children = newRoutes;\n  }\n\n  /**\n   * Appends one or several routes to the routing config and returns the\n   * effective routing config after the operation.\n   *\n   * @param {!Array<!Router.Route>|!Router.Route} routes a single route or an array of those\n   *    (the array is shallow copied)\n   * @return {!Array<!Router.Route>}\n   * @protected\n   */\n  addRoutes(routes) {\n    ensureRoutes(routes);\n    this.root.__children.push(...toArray(routes));\n    return this.getRoutes();\n  }\n\n  /**\n   * Removes all existing routes from the routing config.\n   */\n  removeRoutes() {\n    this.setRoutes([]);\n  }\n\n  /**\n   * Asynchronously resolves the given pathname, i.e. finds all routes matching\n   * the pathname and tries resolving them one after another in the order they\n   * are listed in the routes config until the first non-null result.\n   *\n   * Returns a promise that is fulfilled with the return value of an object that consists of the first\n   * route handler result that returns something other than `null` or `undefined` and context used to get this result.\n   *\n   * If no route handlers return a non-null result, or if no route matches the\n   * given pathname the returned promise is rejected with a 'page not found'\n   * `Error`.\n   *\n   * @param {!string|!{pathname: !string}} pathnameOrContext the pathname to\n   *    resolve or a context object with a `pathname` property and other\n   *    properties to pass to the route resolver functions.\n   * @return {!Promise<any>}\n   */\n  resolve(pathnameOrContext) {\n    const context = Object.assign(\n      {},\n      this.context,\n      isString(pathnameOrContext) ? {pathname: pathnameOrContext} : pathnameOrContext\n    );\n    const match = matchRoute(\n      this.root,\n      this.__normalizePathname(context.pathname),\n      this.baseUrl\n    );\n    const resolve = this.resolveRoute;\n    let matches = null;\n    let nextMatches = null;\n    let currentContext = context;\n\n    function next(resume, parent = matches.value.route, prevResult) {\n      const routeToSkip = prevResult === null && matches.value.route;\n      matches = nextMatches || match.next(routeToSkip);\n      nextMatches = null;\n\n      if (!resume) {\n        if (matches.done || !isChildRoute(parent, matches.value.route)) {\n          nextMatches = matches;\n          return Promise.resolve(notFoundResult);\n        }\n      }\n\n      if (matches.done) {\n        return Promise.reject(getNotFoundError(context));\n      }\n\n      currentContext = Object.assign(\n        currentContext\n          ? {chain: (currentContext.chain ? currentContext.chain.slice(0) : [])}\n          : {},\n        context,\n        matches.value\n      );\n      updateChainForRoute(currentContext, matches.value);\n\n      return Promise.resolve(resolve(currentContext)).then(resolution => {\n        if (resolution !== null && resolution !== undefined && resolution !== notFoundResult) {\n          currentContext.result = resolution.result || resolution;\n          return currentContext;\n        }\n        return next(resume, parent, resolution);\n      });\n    }\n\n    context.next = next;\n\n    return Promise.resolve()\n      .then(() => next(true, this.root))\n      .catch((error) => {\n        const errorMessage = generateErrorMessage(currentContext);\n        if (!error) {\n          error = new Error(errorMessage);\n        } else {\n          console.warn(errorMessage);\n        }\n        error.context = error.context || currentContext;\n        // DOMException has its own code which is read-only\n        if (!(error instanceof DOMException)) {\n          error.code = error.code || 500;\n        }\n        if (this.errorHandler) {\n          currentContext.result = this.errorHandler(error);\n          return currentContext;\n        }\n        throw error;\n      });\n  }\n\n  /**\n   * URL constructor polyfill hook. Creates and returns an URL instance.\n   */\n  static __createUrl(url, base) {\n    return new URL(url, base);\n  }\n\n  /**\n   * If the baseUrl property is set, transforms the baseUrl and returns the full\n   * actual `base` string for using in the `new URL(path, base);` and for\n   * prepernding the paths with. The returned base ends with a trailing slash.\n   *\n   * Otherwise, returns empty string.\n   */\n  get __effectiveBaseUrl() {\n    return this.baseUrl\n      ? this.constructor.__createUrl(\n        this.baseUrl,\n        document.baseURI || document.URL\n      ).href.replace(/[^\\/]*$/, '')\n      : '';\n  }\n\n  /**\n   * If the baseUrl is set, matches the pathname with the router’s baseUrl,\n   * and returns the local pathname with the baseUrl stripped out.\n   *\n   * If the pathname does not match the baseUrl, returns undefined.\n   *\n   * If the `baseUrl` is not set, returns the unmodified pathname argument.\n   */\n  __normalizePathname(pathname) {\n    if (!this.baseUrl) {\n      // No base URL, no need to transform the pathname.\n      return pathname;\n    }\n\n    const base = this.__effectiveBaseUrl;\n    const normalizedUrl = this.constructor.__createUrl(pathname, base).href;\n    if (normalizedUrl.slice(0, base.length) === base) {\n      return normalizedUrl.slice(base.length);\n    }\n  }\n}\n\nResolver.pathToRegexp = pathToRegexp;\n\nexport default Resolver;\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport Resolver from './resolver.js';\nimport {isString} from '../utils.js';\n\nconst {pathToRegexp} = Resolver;\nconst cache = new Map();\n\nfunction cacheRoutes(routesByName, route, routes) {\n  const name = route.name || route.component;\n  if (name) {\n    if (routesByName.has(name)) {\n      routesByName.get(name).push(route);\n    } else {\n      routesByName.set(name, [route]);\n    }\n  }\n\n  if (Array.isArray(routes)) {\n    for (let i = 0; i < routes.length; i++) {\n      const childRoute = routes[i];\n      childRoute.parent = route;\n      cacheRoutes(routesByName, childRoute, childRoute.__children || childRoute.children);\n    }\n  }\n}\n\nfunction getRouteByName(routesByName, routeName) {\n  const routes = routesByName.get(routeName);\n  if (routes && routes.length > 1) {\n    throw new Error(\n      `Duplicate route with name \"${routeName}\".`\n      + ` Try seting unique 'name' route properties.`\n    );\n  }\n  return routes && routes[0];\n}\n\nfunction getRoutePath(route) {\n  let path = route.path;\n  path = Array.isArray(path) ? path[0] : path;\n  return path !== undefined ? path : '';\n}\n\nfunction generateUrls(router, options = {}) {\n  if (!(router instanceof Resolver)) {\n    throw new TypeError('An instance of Resolver is expected');\n  }\n\n  const routesByName = new Map();\n\n  return (routeName, params) => {\n    let route = getRouteByName(routesByName, routeName);\n    if (!route) {\n      routesByName.clear(); // clear cache\n      cacheRoutes(routesByName, router.root, router.root.__children);\n\n      route = getRouteByName(routesByName, routeName);\n      if (!route) {\n        throw new Error(`Route \"${routeName}\" not found`);\n      }\n    }\n\n    let regexp = cache.get(route.fullPath);\n    if (!regexp) {\n      let fullPath = getRoutePath(route);\n      let rt = route.parent;\n      while (rt) {\n        const path = getRoutePath(rt);\n        if (path) {\n          fullPath = path.replace(/\\/$/, '') + '/' + fullPath.replace(/^\\//, '');\n        }\n        rt = rt.parent;\n      }\n      const tokens = pathToRegexp.parse(fullPath);\n      const toPath = pathToRegexp.tokensToFunction(tokens);\n      const keys = Object.create(null);\n      for (let i = 0; i < tokens.length; i++) {\n        if (!isString(tokens[i])) {\n          keys[tokens[i].name] = true;\n        }\n      }\n      regexp = {toPath, keys};\n      cache.set(fullPath, regexp);\n      route.fullPath = fullPath;\n    }\n\n    let url = regexp.toPath(params, options) || '/';\n\n    if (options.stringifyQueryParams && params) {\n      const queryParams = {};\n      const keys = Object.keys(params);\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (!regexp.keys[key]) {\n          queryParams[key] = params[key];\n        }\n      }\n      const query = options.stringifyQueryParams(queryParams);\n      if (query) {\n        url += query.charAt(0) === '?' ? query : `?${query}`;\n      }\n    }\n\n    return url;\n  };\n}\n\nexport default generateUrls;\n","/**\n * @typedef NavigationTrigger\n * @type {object}\n * @property {function()} activate\n * @property {function()} inactivate\n */\n\n/** @type {Array<NavigationTrigger>} */\nlet triggers = [];\n\nexport default function setNavigationTriggers(newTriggers) {\n  triggers.forEach(trigger => trigger.inactivate());\n\n  newTriggers.forEach(trigger => trigger.activate());\n\n  triggers = newTriggers;\n}\n","const willAnimate = elem => {\n  const name = getComputedStyle(elem).getPropertyValue('animation-name');\n  return name && name !== 'none';\n};\n\nconst waitForAnimation = (elem, cb) => {\n  const listener = () => {\n    elem.removeEventListener('animationend', listener);\n    cb();\n  };\n  elem.addEventListener('animationend', listener);\n};\n\nfunction animate(elem, className) {\n  elem.classList.add(className);\n\n  return new Promise(resolve => {\n    if (willAnimate(elem)) {\n      const rect = elem.getBoundingClientRect();\n      const size = `height: ${rect.bottom - rect.top}px; width: ${rect.right - rect.left}px`;\n      elem.setAttribute('style', `position: absolute; ${size}`);\n      waitForAnimation(elem, () => {\n        elem.classList.remove(className);\n        elem.removeAttribute('style');\n        resolve();\n      });\n    } else {\n      elem.classList.remove(className);\n      resolve();\n    }\n  });\n}\n\nexport default animate;\n","import Resolver from './resolver/resolver.js';\nimport generateUrls from './resolver/generateUrls.js';\nimport setNavigationTriggers from './triggers/setNavigationTriggers.js';\nimport animate from './transitions/animate.js';\nimport {\n  ensureRoute,\n  fireRouterEvent,\n  loadBundle,\n  log,\n  logValue,\n  toArray,\n  isFunction,\n  isString,\n  isObject,\n  getNotFoundError,\n  notFoundResult\n} from './utils.js';\n\nconst MAX_REDIRECT_COUNT = 256;\n\nfunction isResultNotEmpty(result) {\n  return result !== null && result !== undefined;\n}\n\nfunction copyContextWithoutNext(context) {\n  const copy = Object.assign({}, context);\n  delete copy.next;\n  return copy;\n}\n\nfunction createLocation({pathname = '', search = '', hash = '', chain = [], params = {}, redirectFrom, resolver}, route) {\n  const routes = chain.map(item => item.route);\n  return {\n    baseUrl: resolver && resolver.baseUrl || '',\n    pathname,\n    search,\n    hash,\n    routes,\n    route: route || routes.length && routes[routes.length - 1] || null,\n    params,\n    redirectFrom,\n    getUrl: (userParams = {}) => getPathnameForRouter(\n      Router.pathToRegexp.compile(\n        getMatchedPath(routes)\n      )(Object.assign({}, params, userParams)),\n      resolver\n    )\n  };\n}\n\nfunction createRedirect(context, pathname) {\n  const params = Object.assign({}, context.params);\n  return {\n    redirect: {\n      pathname,\n      from: context.pathname,\n      params\n    }\n  };\n}\n\nfunction renderElement(context, element) {\n  element.location = createLocation(context);\n  const index = context.chain.map(item => item.route).indexOf(context.route);\n  context.chain[index].element = element;\n  return element;\n}\n\nfunction runCallbackIfPossible(callback, args, thisArg) {\n  if (isFunction(callback)) {\n    return callback.apply(thisArg, args);\n  }\n}\n\nfunction amend(amendmentFunction, args, element) {\n  return amendmentResult => {\n    if (amendmentResult && (amendmentResult.cancel || amendmentResult.redirect)) {\n      return amendmentResult;\n    }\n\n    if (element) {\n      return runCallbackIfPossible(element[amendmentFunction], args, element);\n    }\n  };\n}\n\nfunction processNewChildren(newChildren, route) {\n  if (!Array.isArray(newChildren) && !isObject(newChildren)) {\n    throw new Error(\n      log(\n        `Incorrect \"children\" value for the route ${route.path}: expected array or object, but got ${newChildren}`\n      )\n    );\n  }\n\n  route.__children = [];\n  const childRoutes = toArray(newChildren);\n  for (let i = 0; i < childRoutes.length; i++) {\n    ensureRoute(childRoutes[i]);\n    route.__children.push(childRoutes[i]);\n  }\n}\n\nfunction removeDomNodes(nodes) {\n  if (nodes && nodes.length) {\n    const parent = nodes[0].parentNode;\n    for (let i = 0; i < nodes.length; i++) {\n      parent.removeChild(nodes[i]);\n    }\n  }\n}\n\nfunction getPathnameForRouter(pathname, router) {\n  const base = router.__effectiveBaseUrl;\n  return base\n    ? router.constructor.__createUrl(pathname.replace(/^\\//, ''), base).pathname\n    : pathname;\n}\n\nfunction getMatchedPath(chain) {\n  return chain.map(item => item.path).reduce((a, b) => {\n    if (b.length) {\n      return a.replace(/\\/$/, '') + '/' + b.replace(/^\\//, '');\n    }\n    return a;\n  }, '');\n}\n\n/**\n * A simple client-side router for single-page applications. It uses\n * express-style middleware and has a first-class support for Web Components and\n * lazy-loading. Works great in Polymer and non-Polymer apps.\n *\n * Use `new Router(outlet, options)` to create a new Router instance.\n *\n * * The `outlet` parameter is a reference to the DOM node to render\n *   the content into.\n *\n * * The `options` parameter is an optional object with options. The following\n *   keys are supported:\n *   * `baseUrl` — the initial value for [\n *     the `baseUrl` property\n *   ](#/classes/Router#property-baseUrl)\n *\n * The Router instance is automatically subscribed to navigation events\n * on `window`.\n *\n * See [Live Examples](#/classes/Router/demos/demo/index.html) for the detailed usage demo and code snippets.\n *\n * See also detailed API docs for the following methods, for the advanced usage:\n *\n * * [setOutlet](#/classes/Router#method-setOutlet) – should be used to configure the outlet.\n * * [setTriggers](#/classes/Router#method-setTriggers) – should be used to configure the navigation events.\n * * [setRoutes](#/classes/Router#method-setRoutes) – should be used to configure the routes.\n *\n * Only `setRoutes` has to be called manually, others are automatically invoked when creating a new instance.\n *\n * @extends Resolver\n * @demo demo/index.html\n * @summary JavaScript class that renders different DOM content depending on\n *    a given path. It can re-render when triggered or automatically on\n *    'popstate' and / or 'click' events.\n */\nexport class Router extends Resolver {\n\n  /**\n   * Creates a new Router instance with a given outlet, and\n   * automatically subscribes it to navigation events on the `window`.\n   * Using a constructor argument or a setter for outlet is equivalent:\n   *\n   * ```\n   * const router = new Router();\n   * router.setOutlet(outlet);\n   * ```\n   * @param {?Node=} outlet\n   * @param {?RouterOptions=} options\n   */\n  constructor(outlet, options) {\n    const baseElement = document.head.querySelector('base');\n    const baseHref = baseElement && baseElement.getAttribute('href');\n    super([], Object.assign({\n      // Default options\n      baseUrl: baseHref && Resolver.__createUrl(baseHref, document.URL).pathname.replace(/[^\\/]*$/, '')\n    }, options));\n\n    this.resolveRoute = context => this.__resolveRoute(context);\n\n    const triggers = Router.NavigationTrigger;\n    Router.setTriggers.apply(Router, Object.keys(triggers).map(key => triggers[key]));\n\n    /**\n     * The base URL for all routes in the router instance. By default,\n     * if the base element exists in the `<head>`, vaadin-router\n     * takes the `<base href>` attribute value, resolves against current `document.URL`\n     * and gets the `pathname` from the result.\n     *\n     * @public\n     * @type {string}\n     */\n    this.baseUrl;\n\n    /**\n     * A promise that is settled after the current render cycle completes. If\n     * there is no render cycle in progress the promise is immediately settled\n     * with the last render cycle result.\n     *\n     * @public\n     * @type {!Promise<!RouterLocation>}\n     */\n    this.ready;\n    this.ready = Promise.resolve(outlet);\n\n    /**\n     * Contains read-only information about the current router location:\n     * pathname, active routes, parameters. See the\n     * [Location type declaration](#/classes/RouterLocation)\n     * for more details.\n     *\n     * @public\n     * @type {!RouterLocation}\n     */\n    this.location;\n    this.location = createLocation({resolver: this});\n\n    this.__lastStartedRenderId = 0;\n    this.__navigationEventHandler = this.__onNavigationEvent.bind(this);\n    this.setOutlet(outlet);\n    this.subscribe();\n    // Using WeakMap instead of WeakSet because WeakSet is not supported by IE11\n    this.__createdByRouter = new WeakMap();\n    this.__addedByRouter = new WeakMap();\n  }\n\n  __resolveRoute(context) {\n    const route = context.route;\n\n    let callbacks = Promise.resolve();\n\n    if (isFunction(route.children)) {\n      callbacks = callbacks\n        .then(() => route.children(copyContextWithoutNext(context)))\n        .then(children => {\n          // The route.children() callback might have re-written the\n          // route.children property instead of returning a value\n          if (!isResultNotEmpty(children) && !isFunction(route.children)) {\n            children = route.children;\n          }\n          processNewChildren(children, route);\n        });\n    }\n\n    const commands = {\n      redirect: path => createRedirect(context, path),\n      component: (component) => {\n        const element = document.createElement(component);\n        this.__createdByRouter.set(element, true);\n        return element;\n      }\n    };\n\n    return callbacks\n      .then(() => {\n        if (this.__isLatestRender(context)) {\n          return runCallbackIfPossible(route.action, [context, commands], route);\n        }\n      })\n      .then(result => {\n        if (isResultNotEmpty(result)) {\n          // Actions like `() => import('my-view.js')` are not expected to\n          // end the resolution, despite the result is not empty. Checking\n          // the result with a whitelist of values that end the resolution.\n          if (result instanceof HTMLElement ||\n              result.redirect ||\n              result === notFoundResult) {\n            return result;\n          }\n        }\n\n        if (isString(route.redirect)) {\n          return commands.redirect(route.redirect);\n        }\n\n        if (route.bundle) {\n          return loadBundle(route.bundle)\n            .then(() => {}, () => {\n              throw new Error(log(`Bundle not found: ${route.bundle}. Check if the file name is correct`));\n            });\n        }\n      })\n      .then(result => {\n        if (isResultNotEmpty(result)) {\n          return result;\n        }\n        if (isString(route.component)) {\n          return commands.component(route.component);\n        }\n      });\n  }\n\n  /**\n   * Sets the router outlet (the DOM node where the content for the current\n   * route is inserted). Any content pre-existing in the router outlet is\n   * removed at the end of each render pass.\n   *\n   * NOTE: this method is automatically invoked first time when creating a new Router instance.\n   *\n   * @param {?Node} outlet the DOM node where the content for the current route\n   *     is inserted.\n   */\n  setOutlet(outlet) {\n    if (outlet) {\n      this.__ensureOutlet(outlet);\n    }\n    this.__outlet = outlet;\n  }\n\n  /**\n   * Returns the current router outlet. The initial value is `undefined`.\n   *\n   * @return {?Node} the current router outlet (or `undefined`)\n   */\n  getOutlet() {\n    return this.__outlet;\n  }\n\n  /**\n   * Sets the routing config (replacing the existing one) and triggers a\n   * navigation event so that the router outlet is refreshed according to the\n   * current `window.location` and the new routing config.\n   *\n   * Each route object may have the following properties, listed here in the processing order:\n   * * `path` – the route path (relative to the parent route if any) in the\n   * [express.js syntax](https://expressjs.com/en/guide/routing.html#route-paths\").\n   *\n   * * `children` – an array of nested routes or a function that provides this\n   * array at the render time. The function can be synchronous or asynchronous:\n   * in the latter case the render is delayed until the returned promise is\n   * resolved. The `children` function is executed every time when this route is\n   * being rendered. This allows for dynamic route structures (e.g. backend-defined),\n   * but it might have a performance impact as well. In order to avoid calling\n   * the function on subsequent renders, you can override the `children` property\n   * of the route object and save the calculated array there\n   * (via `context.route.children = [ route1, route2, ...];`).\n   * Parent routes are fully resolved before resolving the children. Children\n   * 'path' values are relative to the parent ones.\n   *\n   * * `action` – the action that is executed before the route is resolved.\n   * The value for this property should be a function, accepting `context`\n   * and `commands` parameters described below. If present, this function is\n   * always invoked first, disregarding of the other properties' presence.\n   * The action can return a result directly or within a `Promise`, which\n   * resolves to the result. If the action result is an `HTMLElement` instance,\n   * a `commands.component(name)` result, a `commands.redirect(path)` result,\n   * or a `context.next()` result, the current route resolution is finished,\n   * and other route config properties are ignored.\n   * See also **Route Actions** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * * `redirect` – other route's path to redirect to. Passes all route parameters to the redirect target.\n   * The target route should also be defined.\n   * See also **Redirects** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * * `bundle` – string containing the path to `.js` or `.mjs` bundle to load before resolving the route,\n   * or the object with \"module\" and \"nomodule\" keys referring to different bundles.\n   * Each bundle is only loaded once. If \"module\" and \"nomodule\" are set, only one bundle is loaded,\n   * depending on whether the browser supports ES modules or not.\n   * The property is ignored when either an `action` returns the result or `redirect` property is present.\n   * Any error, e.g. 404 while loading bundle will cause route resolution to throw.\n   * See also **Code Splitting** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * * `component` – the tag name of the Web Component to resolve the route to.\n   * The property is ignored when either an `action` returns the result or `redirect` property is present.\n   * If route contains the `component` property (or an action that return a component)\n   * and its child route also contains the `component` property, child route's component\n   * will be rendered as a light dom child of a parent component.\n   *\n   * * `name` – the string name of the route to use in the\n   * [`router.urlForName(name, params)`](#/classes/Router#method-urlForName)\n   * navigation helper method.\n   *\n   * For any route function (`action`, `children`) defined, the corresponding `route` object is available inside the callback\n   * through the `this` reference. If you need to access it, make sure you define the callback as a non-arrow function\n   * because arrow functions do not have their own `this` reference.\n   *\n   * `context` object that is passed to `action` function holds the following properties:\n   * * `context.pathname` – string with the pathname being resolved\n   *\n   * * `context.search` – search query string\n   *\n   * * `context.hash` – hash string\n   *\n   * * `context.params` – object with route parameters\n   *\n   * * `context.route` – object that holds the route that is currently being rendered.\n   *\n   * * `context.next()` – function for asynchronously getting the next route\n   * contents from the resolution chain (if any)\n   *\n   * `commands` object that is passed to `action` function has\n   * the following methods:\n   *\n   * * `commands.redirect(path)` – function that creates a redirect data\n   * for the path specified.\n   *\n   * * `commands.component(component)` – function that creates a new HTMLElement\n   * with current context. Note: the component created by this function is reused if visiting the same path twice in row.\n   *\n   *\n   * @param {!Array<!Route>|!Route} routes a single route or an array of those\n   * @param {?boolean} skipRender configure the router but skip rendering the\n   *     route corresponding to the current `window.location` values\n   *\n   * @return {!Promise<!Node>}\n   */\n  setRoutes(routes, skipRender = false) {\n    this.__previousContext = undefined;\n    this.__urlForName = undefined;\n    super.setRoutes(routes);\n    if (!skipRender) {\n      this.__onNavigationEvent();\n    }\n    return this.ready;\n  }\n\n  /**\n   * Asynchronously resolves the given pathname and renders the resolved route\n   * component into the router outlet. If no router outlet is set at the time of\n   * calling this method, or at the time when the route resolution is completed,\n   * a `TypeError` is thrown.\n   *\n   * Returns a promise that is fulfilled with the router outlet DOM Node after\n   * the route component is created and inserted into the router outlet, or\n   * rejected if no route matches the given path.\n   *\n   * If another render pass is started before the previous one is completed, the\n   * result of the previous render pass is ignored.\n   *\n   * @param {!string|!{pathname: !string, search: ?string, hash: ?string}} pathnameOrContext\n   *    the pathname to render or a context object with a `pathname` property,\n   *    optional `search` and `hash` properties, and other properties\n   *    to pass to the resolver.\n   * @param {boolean=} shouldUpdateHistory\n   *    update browser history with the rendered location\n   * @return {!Promise<!Node>}\n   */\n  render(pathnameOrContext, shouldUpdateHistory) {\n    const renderId = ++this.__lastStartedRenderId;\n    const context = Object.assign(\n      {\n        search: '',\n        hash: ''\n      },\n      isString(pathnameOrContext)\n        ? {pathname: pathnameOrContext}\n        : pathnameOrContext,\n      {\n        __renderId: renderId\n      }\n    );\n\n    // Find the first route that resolves to a non-empty result\n    this.ready = this.resolve(context)\n\n      // Process the result of this.resolve() and handle all special commands:\n      // (redirect / prevent / component). If the result is a 'component',\n      // then go deeper and build the entire chain of nested components matching\n      // the pathname. Also call all 'on before' callbacks along the way.\n      .then(context => this.__fullyResolveChain(context))\n\n      .then(context => {\n        if (this.__isLatestRender(context)) {\n          const previousContext = this.__previousContext;\n\n          // Check if the render was prevented and make an early return in that case\n          if (context === previousContext) {\n            // Replace the history with the previous context\n            // to make sure the URL stays the same.\n            this.__updateBrowserHistory(previousContext, true);\n            return this.location;\n          }\n\n          this.location = createLocation(context);\n\n          if (shouldUpdateHistory) {\n            // Replace only if first render redirects, so that we don’t leave\n            // the redirecting record in the history\n            this.__updateBrowserHistory(context, renderId === 1);\n          }\n\n          fireRouterEvent('location-changed', {router: this, location: this.location});\n\n          // Skip detaching/re-attaching there are no render changes\n          if (context.__skipAttach) {\n            this.__copyUnchangedElements(context, previousContext);\n            this.__previousContext = context;\n            return this.location;\n          }\n\n          this.__addAppearingContent(context, previousContext);\n          const animationDone = this.__animateIfNeeded(context);\n\n          this.__runOnAfterEnterCallbacks(context);\n          this.__runOnAfterLeaveCallbacks(context, previousContext);\n\n          return animationDone.then(() => {\n            if (this.__isLatestRender(context)) {\n              // If there is another render pass started after this one,\n              // the 'disappearing content' would be removed when the other\n              // render pass calls `this.__addAppearingContent()`\n              this.__removeDisappearingContent();\n\n              this.__previousContext = context;\n              return this.location;\n            }\n          });\n        }\n      })\n      .catch(error => {\n        if (renderId === this.__lastStartedRenderId) {\n          if (shouldUpdateHistory) {\n            this.__updateBrowserHistory(context);\n          }\n          removeDomNodes(this.__outlet && this.__outlet.children);\n          this.location = createLocation(Object.assign(context, {resolver: this}));\n          fireRouterEvent('error', Object.assign({router: this, error}, context));\n          throw error;\n        }\n      });\n    return this.ready;\n  }\n\n  // `topOfTheChainContextBeforeRedirects` is a context coming from Resolver.resolve().\n  // It would contain a 'redirect' route or the first 'component' route that\n  // matched the pathname. There might be more child 'component' routes to be\n  // resolved and added into the chain. This method would find and add them.\n  // `contextBeforeRedirects` is the context containing such a child component\n  // route. It's only necessary when this method is called recursively (otherwise\n  // it's the same as the 'top of the chain' context).\n  //\n  // Apart from building the chain of child components, this method would also\n  // handle 'redirect' routes, call 'onBefore' callbacks and handle 'prevent'\n  // and 'redirect' callback results.\n  __fullyResolveChain(topOfTheChainContextBeforeRedirects,\n    contextBeforeRedirects = topOfTheChainContextBeforeRedirects) {\n    return this.__findComponentContextAfterAllRedirects(contextBeforeRedirects)\n      // `contextAfterRedirects` is always a context with an `HTMLElement` result\n      // In other cases the promise gets rejected and .then() is not called\n      .then(contextAfterRedirects => {\n        const redirectsHappened = contextAfterRedirects !== contextBeforeRedirects;\n        const topOfTheChainContextAfterRedirects =\n          redirectsHappened ? contextAfterRedirects : topOfTheChainContextBeforeRedirects;\n\n        const matchedPath = getPathnameForRouter(\n          getMatchedPath(contextAfterRedirects.chain),\n          contextAfterRedirects.resolver\n        );\n        const isFound = (matchedPath === contextAfterRedirects.pathname);\n\n        // Recursive method to try matching more child and sibling routes\n        const findNextContextIfAny = (context, parent = context.route, prevResult) => {\n          return context.next(undefined, parent, prevResult).then(nextContext => {\n            if (nextContext === null || nextContext === notFoundResult) {\n              // Next context is not found in children, ...\n              if (isFound) {\n                // ...but original context is already fully matching - use it\n                return context;\n              } else if (parent.parent !== null) {\n                // ...and there is no full match yet - step up to check siblings\n                return findNextContextIfAny(context, parent.parent, nextContext);\n              } else {\n                return nextContext;\n              }\n            }\n\n            return nextContext;\n          });\n        };\n\n        return findNextContextIfAny(contextAfterRedirects).then(nextContext => {\n          if (nextContext === null || nextContext === notFoundResult) {\n            throw getNotFoundError(topOfTheChainContextAfterRedirects);\n          }\n\n          return nextContext\n          && nextContext !== notFoundResult\n          && nextContext !== contextAfterRedirects\n            ? this.__fullyResolveChain(topOfTheChainContextAfterRedirects, nextContext)\n            : this.__amendWithOnBeforeCallbacks(contextAfterRedirects);\n        });\n      });\n  }\n\n  __findComponentContextAfterAllRedirects(context) {\n    const result = context.result;\n    if (result instanceof HTMLElement) {\n      renderElement(context, result);\n      return Promise.resolve(context);\n    } else if (result.redirect) {\n      return this.__redirect(result.redirect, context.__redirectCount, context.__renderId)\n        .then(context => this.__findComponentContextAfterAllRedirects(context));\n    } else if (result instanceof Error) {\n      return Promise.reject(result);\n    } else {\n      return Promise.reject(\n        new Error(\n          log(\n            `Invalid route resolution result for path \"${context.pathname}\". ` +\n            `Expected redirect object or HTML element, but got: \"${logValue(result)}\". ` +\n            `Double check the action return value for the route.`\n          )\n        ));\n    }\n  }\n\n  __amendWithOnBeforeCallbacks(contextWithFullChain) {\n    return this.__runOnBeforeCallbacks(contextWithFullChain).then(amendedContext => {\n      if (amendedContext === this.__previousContext || amendedContext === contextWithFullChain) {\n        return amendedContext;\n      }\n      return this.__fullyResolveChain(amendedContext);\n    });\n  }\n\n  __runOnBeforeCallbacks(newContext) {\n    const previousContext = this.__previousContext || {};\n    const previousChain = previousContext.chain || [];\n    const newChain = newContext.chain;\n\n    let callbacks = Promise.resolve();\n    const prevent = () => ({cancel: true});\n    const redirect = (pathname) => createRedirect(newContext, pathname);\n\n    newContext.__divergedChainIndex = 0;\n    newContext.__skipAttach = false;\n    if (previousChain.length) {\n      for (let i = 0; i < Math.min(previousChain.length, newChain.length); i = ++newContext.__divergedChainIndex) {\n        if (previousChain[i].route !== newChain[i].route\n          || previousChain[i].path !== newChain[i].path && previousChain[i].element !== newChain[i].element\n          || !this.__isReusableElement(previousChain[i].element, newChain[i].element)) {\n          break;\n        }\n      }\n\n      // Skip re-attaching and notifications if element and chain do not change\n      newContext.__skipAttach =\n        // Same route chain\n        newChain.length === previousChain.length && newContext.__divergedChainIndex == newChain.length &&\n        // Same element\n        this.__isReusableElement(newContext.result, previousContext.result);\n\n      if (newContext.__skipAttach) {\n        // execute onBeforeLeave for changed segment element when skipping attach\n        for (let i = newChain.length - 1; i >= 0; i--) {\n          callbacks = this.__runOnBeforeLeaveCallbacks(callbacks, newContext, {prevent}, previousChain[i]);\n        }\n        // execute onBeforeEnter for changed segment element when skipping attach\n        for (let i = 0; i < newChain.length; i++) {\n          callbacks = this.__runOnBeforeEnterCallbacks(callbacks, newContext, {prevent, redirect}, newChain[i]);\n          previousChain[i].element.location = createLocation(newContext, previousChain[i].route);\n        }\n\n      } else {\n        // execute onBeforeLeave when NOT skipping attach\n        for (let i = previousChain.length - 1; i >= newContext.__divergedChainIndex; i--) {\n          callbacks = this.__runOnBeforeLeaveCallbacks(callbacks, newContext, {prevent}, previousChain[i]);\n        }\n      }\n    }\n    // execute onBeforeEnter when NOT skipping attach\n    if (!newContext.__skipAttach) {\n      for (let i = 0; i < newChain.length; i++) {\n        if (i < newContext.__divergedChainIndex) {\n          if (i < previousChain.length && previousChain[i].element) {\n            previousChain[i].element.location = createLocation(newContext, previousChain[i].route);\n          }\n        } else {\n          callbacks = this.__runOnBeforeEnterCallbacks(callbacks, newContext, {prevent, redirect}, newChain[i]);\n          if (newChain[i].element) {\n            newChain[i].element.location = createLocation(newContext, newChain[i].route);\n          }\n        }\n      }\n    }\n    return callbacks.then(amendmentResult => {\n      if (amendmentResult) {\n        if (amendmentResult.cancel) {\n          this.__previousContext.__renderId = newContext.__renderId;\n          return this.__previousContext;\n        }\n        if (amendmentResult.redirect) {\n          return this.__redirect(amendmentResult.redirect, newContext.__redirectCount, newContext.__renderId);\n        }\n      }\n      return newContext;\n    });\n  }\n\n  __runOnBeforeLeaveCallbacks(callbacks, newContext, commands, chainElement) {\n    const location = createLocation(newContext);\n    return callbacks.then(result => {\n      if (this.__isLatestRender(newContext)) {\n        const afterLeaveFunction = amend('onBeforeLeave', [location, commands, this], chainElement.element);\n        return afterLeaveFunction(result);\n      }\n    }).then(result => {\n      if (!(result || {}).redirect) {\n        return result;\n      }\n    });\n  }\n\n  __runOnBeforeEnterCallbacks(callbacks, newContext, commands, chainElement) {\n    const location = createLocation(newContext, chainElement.route);\n    return callbacks.then(result => {\n      if (this.__isLatestRender(newContext)) {\n        const beforeEnterFunction = amend('onBeforeEnter', [location, commands, this], chainElement.element);\n        return beforeEnterFunction(result);\n      }\n    });\n  }\n\n  __isReusableElement(element, otherElement) {\n    if (element && otherElement) {\n      return this.__createdByRouter.get(element) && this.__createdByRouter.get(otherElement)\n        ? element.localName === otherElement.localName\n        : element === otherElement;\n    }\n    return false;\n  }\n\n  __isLatestRender(context) {\n    return context.__renderId === this.__lastStartedRenderId;\n  }\n\n  __redirect(redirectData, counter, renderId) {\n    if (counter > MAX_REDIRECT_COUNT) {\n      throw new Error(log(`Too many redirects when rendering ${redirectData.from}`));\n    }\n\n    return this.resolve({\n      pathname: this.urlForPath(\n        redirectData.pathname,\n        redirectData.params\n      ),\n      redirectFrom: redirectData.from,\n      __redirectCount: (counter || 0) + 1,\n      __renderId: renderId\n    });\n  }\n\n  __ensureOutlet(outlet = this.__outlet) {\n    if (!(outlet instanceof Node)) {\n      throw new TypeError(log(`Expected router outlet to be a valid DOM Node (but got ${outlet})`));\n    }\n  }\n\n  __updateBrowserHistory({pathname, search = '', hash = ''}, replace) {\n    if (window.location.pathname !== pathname\n        || window.location.search !== search\n        || window.location.hash !== hash\n    ) {\n      const changeState = replace ? 'replaceState' : 'pushState';\n      window.history[changeState](null, document.title, pathname + search + hash);\n      window.dispatchEvent(new PopStateEvent('popstate', {state: 'vaadin-router-ignore'}));\n    }\n  }\n\n  __copyUnchangedElements(context, previousContext) {\n    // Find the deepest common parent between the last and the new component\n    // chains. Update references for the unchanged elements in the new chain\n    let deepestCommonParent = this.__outlet;\n    for (let i = 0; i < context.__divergedChainIndex; i++) {\n      const unchangedElement = previousContext && previousContext.chain[i].element;\n      if (unchangedElement) {\n        if (unchangedElement.parentNode === deepestCommonParent) {\n          context.chain[i].element = unchangedElement;\n          deepestCommonParent = unchangedElement;\n        } else {\n          break;\n        }\n      }\n    }\n    return deepestCommonParent;\n  }\n\n  __addAppearingContent(context, previousContext) {\n    this.__ensureOutlet();\n\n    // If the previous 'entering' animation has not completed yet,\n    // stop it and remove that content from the DOM before adding new one.\n    this.__removeAppearingContent();\n\n    // Copy reusable elements from the previousContext to current\n    const deepestCommonParent = this.__copyUnchangedElements(context, previousContext);\n\n    // Keep two lists of DOM elements:\n    //  - those that should be removed once the transition animation is over\n    //  - and those that should remain\n    this.__appearingContent = [];\n    this.__disappearingContent = Array\n      .from(deepestCommonParent.children)\n      .filter(\n        // Only remove layout content that was added by router\n        e => this.__addedByRouter.get(e) &&\n        // Do not remove the result element to avoid flickering\n        e !== context.result);\n\n    // Add new elements (starting after the deepest common parent) to the DOM.\n    // That way only the components that are actually different between the two\n    // locations are added to the DOM (and those that are common remain in the\n    // DOM without first removing and then adding them again).\n    let parentElement = deepestCommonParent;\n    for (let i = context.__divergedChainIndex; i < context.chain.length; i++) {\n      const elementToAdd = context.chain[i].element;\n      if (elementToAdd) {\n        parentElement.appendChild(elementToAdd);\n        this.__addedByRouter.set(elementToAdd, true);\n        if (parentElement === deepestCommonParent) {\n          this.__appearingContent.push(elementToAdd);\n        }\n        parentElement = elementToAdd;\n      }\n    }\n  }\n\n  __removeDisappearingContent() {\n    if (this.__disappearingContent) {\n      removeDomNodes(this.__disappearingContent);\n    }\n    this.__disappearingContent = null;\n    this.__appearingContent = null;\n  }\n\n  __removeAppearingContent() {\n    if (this.__disappearingContent && this.__appearingContent) {\n      removeDomNodes(this.__appearingContent);\n      this.__disappearingContent = null;\n      this.__appearingContent = null;\n    }\n  }\n\n  __runOnAfterLeaveCallbacks(currentContext, targetContext) {\n    if (!targetContext) {\n      return;\n    }\n\n    // REVERSE iteration: from Z to A\n    for (let i = targetContext.chain.length - 1; i >= currentContext.__divergedChainIndex; i--) {\n      if (!this.__isLatestRender(currentContext)) {\n        break;\n      }\n      const currentComponent = targetContext.chain[i].element;\n      if (!currentComponent) {\n        continue;\n      }\n      try {\n        const location = createLocation(currentContext);\n        runCallbackIfPossible(\n          currentComponent.onAfterLeave,\n          [location, {}, targetContext.resolver],\n          currentComponent);\n      } finally {\n        if (this.__disappearingContent.indexOf(currentComponent) > -1) {\n          removeDomNodes(currentComponent.children);\n        }\n      }\n    }\n  }\n\n  __runOnAfterEnterCallbacks(currentContext) {\n    // forward iteration: from A to Z\n    for (let i = currentContext.__divergedChainIndex; i < currentContext.chain.length; i++) {\n      if (!this.__isLatestRender(currentContext)) {\n        break;\n      }\n      const currentComponent = currentContext.chain[i].element || {};\n      const location = createLocation(currentContext, currentContext.chain[i].route);\n      runCallbackIfPossible(\n        currentComponent.onAfterEnter,\n        [location, {}, currentContext.resolver],\n        currentComponent);\n    }\n  }\n\n  __animateIfNeeded(context) {\n    const from = (this.__disappearingContent || [])[0];\n    const to = (this.__appearingContent || [])[0];\n    const promises = [];\n\n    const chain = context.chain;\n    let config;\n    for (let i = chain.length; i > 0; i--) {\n      if (chain[i - 1].route.animate) {\n        config = chain[i - 1].route.animate;\n        break;\n      }\n    }\n\n    if (from && to && config) {\n      const leave = isObject(config) && config.leave || 'leaving';\n      const enter = isObject(config) && config.enter || 'entering';\n      promises.push(animate(from, leave));\n      promises.push(animate(to, enter));\n    }\n\n    return Promise.all(promises).then(() => context);\n  }\n\n  /**\n   * Subscribes this instance to navigation events on the `window`.\n   *\n   * NOTE: beware of resource leaks. For as long as a router instance is\n   * subscribed to navigation events, it won't be garbage collected.\n   */\n  subscribe() {\n    window.addEventListener('vaadin-router-go', this.__navigationEventHandler);\n  }\n\n  /**\n   * Removes the subscription to navigation events created in the `subscribe()`\n   * method.\n   */\n  unsubscribe() {\n    window.removeEventListener('vaadin-router-go', this.__navigationEventHandler);\n  }\n\n  __onNavigationEvent(event) {\n    const {pathname, search, hash} = event ? event.detail : window.location;\n    if (isString(this.__normalizePathname(pathname))) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      this.render({pathname, search, hash}, true);\n    }\n  }\n\n  /**\n   * Configures what triggers Router navigation events:\n   *  - `POPSTATE`: popstate events on the current `window`\n   *  - `CLICK`: click events on `<a>` links leading to the current page\n   *\n   * This method is invoked with the pre-configured values when creating a new Router instance.\n   * By default, both `POPSTATE` and `CLICK` are enabled. This setup is expected to cover most of the use cases.\n   *\n   * See the `router-config.js` for the default navigation triggers config. Based on it, you can\n   * create the own one and only import the triggers you need, instead of pulling in all the code,\n   * e.g. if you want to handle `click` differently.\n   *\n   * See also **Navigation Triggers** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * @param {...NavigationTrigger} triggers\n   */\n  static setTriggers(...triggers) {\n    setNavigationTriggers(triggers);\n  }\n\n  /**\n   * Generates a URL for the route with the given name, optionally performing\n   * substitution of parameters.\n   *\n   * The route is searched in all the Router instances subscribed to\n   * navigation events.\n   *\n   * **Note:** For child route names, only array children are considered.\n   * It is not possible to generate URLs using a name for routes set with\n   * a children function.\n   *\n   * @function urlForName\n   * @param {!string} name the route name or the route’s `component` name.\n   * @param {Params=} params Optional object with route path parameters.\n   * Named parameters are passed by name (`params[name] = value`), unnamed\n   * parameters are passed by index (`params[index] = value`).\n   *\n   * @return {string}\n   */\n  urlForName(name, params) {\n    if (!this.__urlForName) {\n      this.__urlForName = generateUrls(this);\n    }\n    return getPathnameForRouter(\n      this.__urlForName(name, params),\n      this\n    );\n  }\n\n  /**\n   * Generates a URL for the given route path, optionally performing\n   * substitution of parameters.\n   *\n   * @param {!string} path string route path declared in [express.js syntax](https://expressjs.com/en/guide/routing.html#route-paths\").\n   * @param {Params=} params Optional object with route path parameters.\n   * Named parameters are passed by name (`params[name] = value`), unnamed\n   * parameters are passed by index (`params[index] = value`).\n   *\n   * @return {string}\n   */\n  urlForPath(path, params) {\n    return getPathnameForRouter(\n      Router.pathToRegexp.compile(path)(params),\n      this\n    );\n  }\n\n  /**\n   * Triggers navigation to a new path. Returns a boolean without waiting until\n   * the navigation is complete. Returns `true` if at least one `Router`\n   * has handled the navigation (was subscribed and had `baseUrl` matching\n   * the `path` argument), otherwise returns `false`.\n   *\n   * @param {!string|!{pathname: !string, search: (string|undefined), hash: (string|undefined)}} path\n   *   a new in-app path string, or an URL-like object with `pathname`\n   *   string property, and optional `search` and `hash` string properties.\n   * @return {boolean}\n   */\n  static go(path) {\n    const {pathname, search, hash} = isString(path)\n      ? this.__createUrl(path, 'http://a') // some base to omit origin\n      : path;\n    return fireRouterEvent('go', {pathname, search, hash});\n  }\n}\n","const DEV_MODE_CODE_REGEXP =\n  /\\/\\*\\*\\s+vaadin-dev-mode:start([\\s\\S]*)vaadin-dev-mode:end\\s+\\*\\*\\//i;\n\nconst FlowClients = window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients;\n\nfunction isMinified() {\n  function test() {\n    /** vaadin-dev-mode:start\n    return false;\n    vaadin-dev-mode:end **/\n    return true;\n  }\n  return uncommentAndRun(test);\n}\n\nfunction isDevelopmentMode() {\n  try {\n    if (isForcedDevelopmentMode()) {\n      return true;\n    }\n\n    if (!isLocalhost()) {\n      return false;\n    }\n\n    if (FlowClients) {\n      return !isFlowProductionMode();\n    }\n\n    return !isMinified();\n  } catch (e) {\n    // Some error in this code, assume production so no further actions will be taken\n    return false;\n  }\n}\n\nfunction isForcedDevelopmentMode() {\n  return localStorage.getItem(\"vaadin.developmentmode.force\");\n}\n\nfunction isLocalhost() {\n  return ([\"localhost\",\"127.0.0.1\"].indexOf(window.location.hostname) >= 0);\n}\n\nfunction isFlowProductionMode() {\n  if (FlowClients) {\n    const productionModeApps = Object.keys(FlowClients)\n      .map(key => FlowClients[key])\n      .filter(client => client.productionMode);\n    if (productionModeApps.length > 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction uncommentAndRun(callback, args) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n\n  const match = DEV_MODE_CODE_REGEXP.exec(callback.toString());\n  if (match) {\n    try {\n      // requires CSP: script-src 'unsafe-eval'\n      callback = new Function(match[1]);\n    } catch (e) {\n      // eat the exception\n      console.log('vaadin-development-mode-detector: uncommentAndRun() failed', e)\n    }\n  }\n\n  return callback(args);\n}\n\n// A guard against polymer-modulizer removing the window.Vaadin\n// initialization above.\nwindow['Vaadin'] = window['Vaadin'] || {};\n\n/**\n * Inspects the source code of the given `callback` function for\n * specially-marked _commented_ code. If such commented code is found in the\n * callback source, uncomments and runs that code instead of the callback\n * itself. Otherwise runs the callback as is.\n *\n * The optional arguments are passed into the callback / uncommented code,\n * the result is returned.\n *\n * See the `isMinified()` function source code in this file for an example.\n *\n */\nexport const runIfDevelopmentMode = function(callback, args) {\n  if (window.Vaadin.developmentMode) {\n    return uncommentAndRun(callback, args);\n  }\n};\n\nif (window.Vaadin.developmentMode === undefined) {\n  window.Vaadin.developmentMode = isDevelopmentMode();\n}\n","/* This file is autogenerated from src/vaadin-usage-statistics.tpl.html */\n/*\n\nThis script gathers usage statistics from the application running in development mode.\n\nStatistics gathering is automatically disabled and excluded from production builds.\n\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\n\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport { runIfDevelopmentMode } from '@vaadin/vaadin-development-mode-detector/vaadin-development-mode-detector.js';\n\nfunction maybeGatherAndSendStats() {\n  /** vaadin-dev-mode:start\n  (function () {\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar getPolymerVersion = function getPolymerVersion() {\n  return window.Polymer && window.Polymer.version;\n};\n\nvar StatisticsGatherer = function () {\n  function StatisticsGatherer(logger) {\n    classCallCheck(this, StatisticsGatherer);\n\n    this.now = new Date().getTime();\n    this.logger = logger;\n  }\n\n  createClass(StatisticsGatherer, [{\n    key: 'frameworkVersionDetectors',\n    value: function frameworkVersionDetectors() {\n      return {\n        'Flow': function Flow() {\n          if (window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients) {\n            var flowVersions = Object.keys(window.Vaadin.Flow.clients).map(function (key) {\n              return window.Vaadin.Flow.clients[key];\n            }).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().flow;\n            });\n            if (flowVersions.length > 0) {\n              return flowVersions[0];\n            }\n          }\n        },\n        'Vaadin Framework': function VaadinFramework() {\n          if (window.vaadin && window.vaadin.clients) {\n            var frameworkVersions = Object.values(window.vaadin.clients).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().vaadinVersion;\n            });\n            if (frameworkVersions.length > 0) {\n              return frameworkVersions[0];\n            }\n          }\n        },\n        'AngularJs': function AngularJs() {\n          if (window.angular && window.angular.version && window.angular.version) {\n            return window.angular.version.full;\n          }\n        },\n        'Angular': function Angular() {\n          if (window.ng) {\n            var tags = document.querySelectorAll(\"[ng-version]\");\n            if (tags.length > 0) {\n              return tags[0].getAttribute(\"ng-version\");\n            }\n            return \"Unknown\";\n          }\n        },\n        'Backbone.js': function BackboneJs() {\n          if (window.Backbone) {\n            return window.Backbone.VERSION;\n          }\n        },\n        'React': function React() {\n          var reactSelector = '[data-reactroot], [data-reactid]';\n          if (!!document.querySelector(reactSelector)) {\n            // React does not publish the version by default\n            return \"unknown\";\n          }\n        },\n        'Ember': function Ember() {\n          if (window.Em && window.Em.VERSION) {\n            return window.Em.VERSION;\n          } else if (window.Ember && window.Ember.VERSION) {\n            return window.Ember.VERSION;\n          }\n        },\n        'jQuery': function (_jQuery) {\n          function jQuery() {\n            return _jQuery.apply(this, arguments);\n          }\n\n          jQuery.toString = function () {\n            return _jQuery.toString();\n          };\n\n          return jQuery;\n        }(function () {\n          if (typeof jQuery === 'function' && jQuery.prototype.jquery !== undefined) {\n            return jQuery.prototype.jquery;\n          }\n        }),\n        'Polymer': function Polymer() {\n          var version = getPolymerVersion();\n          if (version) {\n            return version;\n          }\n        },\n        'LitElement': function LitElement() {\n          var version = window.litElementVersions && window.litElementVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'LitHtml': function LitHtml() {\n          var version = window.litHtmlVersions && window.litHtmlVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'Vue.js': function VueJs() {\n          if (window.Vue) {\n            return window.Vue.version;\n          }\n        }\n      };\n    }\n  }, {\n    key: 'getUsedVaadinElements',\n    value: function getUsedVaadinElements(elements) {\n      var version = getPolymerVersion();\n      var elementClasses = void 0;\n      // NOTE: In case you edit the code here, YOU MUST UPDATE any statistics reporting code in Flow.\n      // Check all locations calling the method getEntries() in\n      // https://github.com/vaadin/flow/blob/master/flow-server/src/main/java/com/vaadin/flow/internal/UsageStatistics.java#L106\n      // Currently it is only used by BootstrapHandler.\n      if (version && version.indexOf('2') === 0) {\n        // Polymer 2: components classes are stored in window.Vaadin\n        elementClasses = Object.keys(window.Vaadin).map(function (c) {\n          return window.Vaadin[c];\n        }).filter(function (c) {\n          return c.is;\n        });\n      } else {\n        // Polymer 3: components classes are stored in window.Vaadin.registrations\n        elementClasses = window.Vaadin.registrations || [];\n      }\n      elementClasses.forEach(function (klass) {\n        var version = klass.version ? klass.version : \"0.0.0\";\n        elements[klass.is] = { version: version };\n      });\n    }\n  }, {\n    key: 'getUsedVaadinThemes',\n    value: function getUsedVaadinThemes(themes) {\n      ['Lumo', 'Material'].forEach(function (themeName) {\n        var theme;\n        var version = getPolymerVersion();\n        if (version && version.indexOf('2') === 0) {\n          // Polymer 2: themes are stored in window.Vaadin\n          theme = window.Vaadin[themeName];\n        } else {\n          // Polymer 3: themes are stored in custom element registry\n          theme = customElements.get('vaadin-' + themeName.toLowerCase() + '-styles');\n        }\n        if (theme && theme.version) {\n          themes[themeName] = { version: theme.version };\n        }\n      });\n    }\n  }, {\n    key: 'getFrameworks',\n    value: function getFrameworks(frameworks) {\n      var detectors = this.frameworkVersionDetectors();\n      Object.keys(detectors).forEach(function (framework) {\n        var detector = detectors[framework];\n        try {\n          var version = detector();\n          if (version) {\n            frameworks[framework] = { version: version };\n          }\n        } catch (e) {}\n      });\n    }\n  }, {\n    key: 'gather',\n    value: function gather(storage) {\n      var storedStats = storage.read();\n      var gatheredStats = {};\n      var types = [\"elements\", \"frameworks\", \"themes\"];\n\n      types.forEach(function (type) {\n        gatheredStats[type] = {};\n        if (!storedStats[type]) {\n          storedStats[type] = {};\n        }\n      });\n\n      var previousStats = JSON.stringify(storedStats);\n\n      this.getUsedVaadinElements(gatheredStats.elements);\n      this.getFrameworks(gatheredStats.frameworks);\n      this.getUsedVaadinThemes(gatheredStats.themes);\n\n      var now = this.now;\n      types.forEach(function (type) {\n        var keys = Object.keys(gatheredStats[type]);\n        keys.forEach(function (key) {\n          if (!storedStats[type][key] || _typeof(storedStats[type][key]) != _typeof({})) {\n            storedStats[type][key] = { firstUsed: now };\n          }\n          // Discards any previously logged version number\n          storedStats[type][key].version = gatheredStats[type][key].version;\n          storedStats[type][key].lastUsed = now;\n        });\n      });\n\n      var newStats = JSON.stringify(storedStats);\n      storage.write(newStats);\n      if (newStats != previousStats && Object.keys(storedStats).length > 0) {\n        this.logger.debug(\"New stats: \" + newStats);\n      }\n    }\n  }]);\n  return StatisticsGatherer;\n}();\n\nvar StatisticsStorage = function () {\n  function StatisticsStorage(key) {\n    classCallCheck(this, StatisticsStorage);\n\n    this.key = key;\n  }\n\n  createClass(StatisticsStorage, [{\n    key: 'read',\n    value: function read() {\n      var localStorageStatsString = localStorage.getItem(this.key);\n      try {\n        return JSON.parse(localStorageStatsString ? localStorageStatsString : '{}');\n      } catch (e) {\n        return {};\n      }\n    }\n  }, {\n    key: 'write',\n    value: function write(data) {\n      localStorage.setItem(this.key, data);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      localStorage.removeItem(this.key);\n    }\n  }, {\n    key: 'isEmpty',\n    value: function isEmpty() {\n      var storedStats = this.read();\n      var empty = true;\n      Object.keys(storedStats).forEach(function (key) {\n        if (Object.keys(storedStats[key]).length > 0) {\n          empty = false;\n        }\n      });\n\n      return empty;\n    }\n  }]);\n  return StatisticsStorage;\n}();\n\nvar StatisticsSender = function () {\n  function StatisticsSender(url, logger) {\n    classCallCheck(this, StatisticsSender);\n\n    this.url = url;\n    this.logger = logger;\n  }\n\n  createClass(StatisticsSender, [{\n    key: 'send',\n    value: function send(data, errorHandler) {\n      var logger = this.logger;\n\n      if (navigator.onLine === false) {\n        logger.debug(\"Offline, can't send\");\n        errorHandler();\n        return;\n      }\n      logger.debug(\"Sending data to \" + this.url);\n\n      var req = new XMLHttpRequest();\n      req.withCredentials = true;\n      req.addEventListener(\"load\", function () {\n        // Stats sent, nothing more to do\n        logger.debug(\"Response: \" + req.responseText);\n      });\n      req.addEventListener(\"error\", function () {\n        logger.debug(\"Send failed\");\n        errorHandler();\n      });\n      req.addEventListener(\"abort\", function () {\n        logger.debug(\"Send aborted\");\n        errorHandler();\n      });\n      req.open(\"POST\", this.url);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      req.send(data);\n    }\n  }]);\n  return StatisticsSender;\n}();\n\nvar StatisticsLogger = function () {\n  function StatisticsLogger(id) {\n    classCallCheck(this, StatisticsLogger);\n\n    this.id = id;\n  }\n\n  createClass(StatisticsLogger, [{\n    key: '_isDebug',\n    value: function _isDebug() {\n      return localStorage.getItem(\"vaadin.\" + this.id + \".debug\");\n    }\n  }, {\n    key: 'debug',\n    value: function debug(msg) {\n      if (this._isDebug()) {\n        console.info(this.id + \": \" + msg);\n      }\n    }\n  }]);\n  return StatisticsLogger;\n}();\n\nvar UsageStatistics = function () {\n  function UsageStatistics() {\n    classCallCheck(this, UsageStatistics);\n\n    this.now = new Date();\n    this.timeNow = this.now.getTime();\n    this.gatherDelay = 10; // Delay between loading this file and gathering stats\n    this.initialDelay = 24 * 60 * 60;\n\n    this.logger = new StatisticsLogger(\"statistics\");\n    this.storage = new StatisticsStorage(\"vaadin.statistics.basket\");\n    this.gatherer = new StatisticsGatherer(this.logger);\n    this.sender = new StatisticsSender(\"https://tools.vaadin.com/usage-stats/submit\", this.logger);\n  }\n\n  createClass(UsageStatistics, [{\n    key: 'maybeGatherAndSend',\n    value: function maybeGatherAndSend() {\n      var _this = this;\n\n      if (localStorage.getItem(UsageStatistics.optOutKey)) {\n        return;\n      }\n      this.gatherer.gather(this.storage);\n      setTimeout(function () {\n        _this.maybeSend();\n      }, this.gatherDelay * 1000);\n    }\n  }, {\n    key: 'lottery',\n    value: function lottery() {\n      return true;\n    }\n  }, {\n    key: 'currentMonth',\n    value: function currentMonth() {\n      return this.now.getYear() * 12 + this.now.getMonth();\n    }\n  }, {\n    key: 'maybeSend',\n    value: function maybeSend() {\n      var firstUse = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      var monthProcessed = Number(localStorage.getItem(UsageStatistics.monthProcessedKey));\n\n      if (!firstUse) {\n        // Use a grace period to avoid interfering with tests, incognito mode etc\n        firstUse = this.timeNow;\n        localStorage.setItem(UsageStatistics.firstUseKey, firstUse);\n      }\n\n      if (this.timeNow < firstUse + this.initialDelay * 1000) {\n        this.logger.debug(\"No statistics will be sent until the initial delay of \" + this.initialDelay + \"s has passed\");\n        return;\n      }\n      if (this.currentMonth() <= monthProcessed) {\n        this.logger.debug(\"This month has already been processed\");\n        return;\n      }\n      localStorage.setItem(UsageStatistics.monthProcessedKey, this.currentMonth());\n      // Use random sampling\n      if (this.lottery()) {\n        this.logger.debug(\"Congratulations, we have a winner!\");\n      } else {\n        this.logger.debug(\"Sorry, no stats from you this time\");\n        return;\n      }\n\n      this.send();\n    }\n  }, {\n    key: 'send',\n    value: function send() {\n      // Ensure we have the latest data\n      this.gatherer.gather(this.storage);\n\n      // Read, send and clean up\n      var data = this.storage.read();\n      data[\"firstUse\"] = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      data[\"usageStatisticsVersion\"] = UsageStatistics.version;\n      var info = 'This request contains usage statistics gathered from the application running in development mode. \\n\\nStatistics gathering is automatically disabled and excluded from production builds.\\n\\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\\n\\n\\n\\n';\n      var self = this;\n      this.sender.send(info + JSON.stringify(data), function () {\n        // Revert the 'month processed' flag\n        localStorage.setItem(UsageStatistics.monthProcessedKey, self.currentMonth() - 1);\n      });\n    }\n  }], [{\n    key: 'version',\n    get: function get$1() {\n      return '2.1.0';\n    }\n  }, {\n    key: 'firstUseKey',\n    get: function get$1() {\n      return 'vaadin.statistics.firstuse';\n    }\n  }, {\n    key: 'monthProcessedKey',\n    get: function get$1() {\n      return 'vaadin.statistics.monthProcessed';\n    }\n  }, {\n    key: 'optOutKey',\n    get: function get$1() {\n      return 'vaadin.statistics.optout';\n    }\n  }]);\n  return UsageStatistics;\n}();\n\ntry {\n  window.Vaadin = window.Vaadin || {};\n  window.Vaadin.usageStatsChecker = window.Vaadin.usageStatsChecker || new UsageStatistics();\n  window.Vaadin.usageStatsChecker.maybeGatherAndSend();\n} catch (e) {\n  // Intentionally ignored as this is not a problem in the app being developed\n}\n\n}());\n\n  vaadin-dev-mode:end **/\n}\n\nexport const usageStatistics = function() {\n  if (typeof runIfDevelopmentMode === 'function') {\n    return runIfDevelopmentMode(maybeGatherAndSendStats);\n  }\n};\n","import {usageStatistics} from '@vaadin/vaadin-usage-statistics/vaadin-usage-statistics.js';\n\nwindow.Vaadin = window.Vaadin || {};\nwindow.Vaadin.registrations = window.Vaadin.registrations || [];\n\nwindow.Vaadin.registrations.push({\n  is: '@vaadin/router',\n  version: '1.7.2',\n});\n\nusageStatistics();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node'; index: number;\n}|{\n  readonly type: 'attribute';\n  index: number;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    // eslint-disable-next-line no-control-regex\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module shady-render\n */\n\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(\n    template: Template, nodesToRemove: Set<Node>) {\n  const {element: {content}, parts} = template;\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let part = parts[partIndex];\n  let nodeIndex = -1;\n  let removeCount = 0;\n  const nodesToRemoveInTemplate = [];\n  let currentRemovingNode: Node|null = null;\n  while (walker.nextNode()) {\n    nodeIndex++;\n    const node = walker.currentNode as Element;\n    // End removal if stepped past the removing node\n    if (node.previousSibling === currentRemovingNode) {\n      currentRemovingNode = null;\n    }\n    // A node to remove was found in the template\n    if (nodesToRemove.has(node)) {\n      nodesToRemoveInTemplate.push(node);\n      // Track node we're removing\n      if (currentRemovingNode === null) {\n        currentRemovingNode = node;\n      }\n    }\n    // When removing, increment count by which to adjust subsequent part indices\n    if (currentRemovingNode !== null) {\n      removeCount++;\n    }\n    while (part !== undefined && part.index === nodeIndex) {\n      // If part is in a removed node deactivate it by setting index to -1 or\n      // adjust the index as needed.\n      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n      // go to the next active part.\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n      part = parts[partIndex];\n    }\n  }\n  nodesToRemoveInTemplate.forEach((n) => n.parentNode!.removeChild(n));\n}\n\nconst countNodes = (node: Node) => {\n  let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n  const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n  while (walker.nextNode()) {\n    count++;\n  }\n  return count;\n};\n\nconst nextActiveIndexInTemplateParts =\n    (parts: TemplatePart[], startIndex = -1) => {\n      for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n          return i;\n        }\n      }\n      return -1;\n    };\n\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(\n    template: Template, node: Node, refNode: Node|null = null) {\n  const {element: {content}, parts} = template;\n  // If there's no refNode, then put node at end of template.\n  // No part indices need to be shifted in this case.\n  if (refNode === null || refNode === undefined) {\n    content.appendChild(node);\n    return;\n  }\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let insertCount = 0;\n  let walkerIndex = -1;\n  while (walker.nextNode()) {\n    walkerIndex++;\n    const walkerNode = walker.currentNode as Element;\n    if (walkerNode === refNode) {\n      insertCount = countNodes(node);\n      refNode.parentNode!.insertBefore(node, refNode);\n    }\n    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n      // If we've inserted the node, simply adjust all subsequent parts\n      if (insertCount > 0) {\n        while (partIndex !== -1) {\n          parts[partIndex].index += insertCount;\n          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n        return;\n      }\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: readonly unknown[]) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari does not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\nconst commentMarker = ` ${marker} `;\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: readonly unknown[];\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: readonly unknown[], type: string,\n      processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment position.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? commentMarker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    template.innerHTML = this.getHTML();\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = this.parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    if (this.startNode.parentNode === null) {\n      return;\n    }\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    // If `value` isn't already a string, we explicitly convert it here in case\n    // it can't be implicitly converted - i.e. it's a symbol.\n    const valueAsString: string =\n        typeof value === 'string' ? value : String(value);\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = valueAsString;\n    } else {\n      this.__commitNode(document.createTextNode(valueAsString));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: readonly string[];\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: readonly string[]) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n  try {\n    const options = {\n      get capture() {\n        eventOptionsSupported = true;\n        return false;\n      }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.addEventListener('test', options as any, options);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.removeEventListener('test', options as any, options);\n  } catch (_e) {\n    // event options not supported\n  }\n})();\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behavior, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport interface TemplateCache {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>;\n  readonly keyString: Map<string, Template>;\n}\n\nexport const templateCaches = new Map<string, TemplateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n  (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.2.1');\n}\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {removeNodes} from './dom.js';\nimport {insertNodeIntoTemplate, removeNodesFromTemplate} from './modify-template.js';\nimport {RenderOptions} from './render-options.js';\nimport {parts, render as litRender} from './render.js';\nimport {templateCaches} from './template-factory.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\nexport {html, svg, TemplateResult} from '../lit-html.js';\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type: string, scopeName: string) =>\n    `${type}--${scopeName}`;\n\nlet compatibleShadyCSSVersion = true;\n\nif (typeof window.ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n  console.warn(\n      `Incompatible ShadyCSS version detected. ` +\n      `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n      `@webcomponents/shadycss@1.3.1.`);\n  compatibleShadyCSSVersion = false;\n}\n\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName: string) =>\n    (result: TemplateResult) => {\n      const cacheKey = getTemplateCacheKey(result.type, scopeName);\n      let templateCache = templateCaches.get(cacheKey);\n      if (templateCache === undefined) {\n        templateCache = {\n          stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n          keyString: new Map<string, Template>()\n        };\n        templateCaches.set(cacheKey, templateCache);\n      }\n\n      let template = templateCache.stringsArray.get(result.strings);\n      if (template !== undefined) {\n        return template;\n      }\n\n      const key = result.strings.join(marker);\n      template = templateCache.keyString.get(key);\n      if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n          window.ShadyCSS!.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n      }\n      templateCache.stringsArray.set(result.strings, template);\n      return template;\n    };\n\nconst TEMPLATE_TYPES = ['html', 'svg'];\n\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName: string) => {\n  TEMPLATE_TYPES.forEach((type) => {\n    const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n    if (templates !== undefined) {\n      templates.keyString.forEach((template) => {\n        const {element: {content}} = template;\n        // IE 11 doesn't support the iterable param Set constructor\n        const styles = new Set<Element>();\n        Array.from(content.querySelectorAll('style')).forEach((s: Element) => {\n          styles.add(s);\n        });\n        removeNodesFromTemplate(template, styles);\n      });\n    }\n  });\n};\n\nconst shadyRenderSet = new Set<string>();\n\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles =\n    (scopeName: string, renderedDOM: DocumentFragment, template?: Template) => {\n      shadyRenderSet.add(scopeName);\n      // If `renderedDOM` is stamped from a Template, then we need to edit that\n      // Template's underlying template element. Otherwise, we create one here\n      // to give to ShadyCSS, which still requires one while scoping.\n      const templateElement =\n          !!template ? template.element : document.createElement('template');\n      // Move styles out of rendered DOM and store.\n      const styles = renderedDOM.querySelectorAll('style');\n      const {length} = styles;\n      // If there are no styles, skip unnecessary work\n      if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n        return;\n      }\n      const condensedStyle = document.createElement('style');\n      // Collect styles into a single style. This helps us make sure ShadyCSS\n      // manipulations will not prevent us from being able to fix up template\n      // part indices.\n      // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n      // currently does this anyway. When it does not, this should be changed.\n      for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode!.removeChild(style);\n        condensedStyle.textContent! += style.textContent;\n      }\n      // Remove styles from nested templates in this scope.\n      removeStylesFromLitTemplates(scopeName);\n      // And then put the condensed style into the \"root\" template passed in as\n      // `template`.\n      const content = templateElement.content;\n      if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n      } else {\n        content.insertBefore(condensedStyle, content.firstChild);\n      }\n      // Note, it's important that ShadyCSS gets the template that `lit-html`\n      // will actually render so that it can update the style inside when\n      // needed (e.g. @apply native Shadow DOM case).\n      window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n      const style = content.querySelector('style');\n      if (window.ShadyCSS!.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n      } else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set<Node>();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n      }\n    };\n\nexport interface ShadyRenderOptions extends Partial<RenderOptions> {\n  scopeName: string;\n}\n\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment|ShadowRoot,\n     options: ShadyRenderOptions) => {\n      if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n      }\n      const scopeName = options.scopeName;\n      const hasRendered = parts.has(container);\n      const needsScoping = compatibleShadyCSSVersion &&\n          container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n          !!(container as ShadowRoot).host;\n      // Handle first render to a scope specially...\n      const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n      // On first scope render, render into a fragment; this cannot be a single\n      // fragment that is reused since nested renders can occur synchronously.\n      const renderContainer =\n          firstScopeRender ? document.createDocumentFragment() : container;\n      litRender(\n          result,\n          renderContainer,\n          {templateFactory: shadyTemplateFactory(scopeName), ...options} as\n              RenderOptions);\n      // When performing first scope render,\n      // (1) We've rendered into a fragment so that there's a chance to\n      // `prepareTemplateStyles` before sub-elements hit the DOM\n      // (which might cause them to render based on a common pattern of\n      // rendering in a custom element's `connectedCallback`);\n      // (2) Scope the template with ShadyCSS one time only for this scope.\n      // (3) Render the fragment into the container and make sure the\n      // container knows its `part` is the one we just rendered. This ensures\n      // DOM will be re-used on subsequent renders.\n      if (firstScopeRender) {\n        const part = parts.get(renderContainer)!;\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(\n            scopeName, renderContainer as DocumentFragment, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n      }\n      // After elements have hit the DOM, update styling if this is the\n      // initial render to this container.\n      // This is needed whenever dynamic changes are made so it would be\n      // safest to do every render; however, this would regress performance\n      // so we leave it up to the user to call `ShadyCSS.styleElement`\n      // for dynamic changes.\n      if (!hasRendered && needsScoping) {\n        window.ShadyCSS!.styleElement((container as ShadowRoot).host);\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    <P extends PropertyKey>(prop: P, _obj: unknown): P => prop;\n\ndeclare global {\n  var JSCompiler_renameProperty: <P extends PropertyKey>(\n      prop: P, _obj: unknown) => P;\n\n  interface Window {\n    JSCompiler_renameProperty: typeof JSCompiler_renameProperty;\n  }\n}\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Function called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string|null, type?: TypeHint): Type;\n\n  /**\n   * Function called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n    ComplexAttributeConverter<Type>|\n    ((value: string|null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean|string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * Map of changed properties with old values. Takes an optional generic\n * interface corresponding to the declared element properties.\n */\n// tslint:disable-next-line:no-any\nexport type PropertyValues<T = any> =\n    keyof T extends PropertyKey ? Map<keyof T, unknown>: never;\n\nexport const defaultConverter: ComplexAttributeConverter = {\n\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        return value ? '' : null;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        return value == null ? value : JSON.stringify(value);\n    }\n    return value;\n  },\n\n  fromAttribute(value: string|null, type?: unknown) {\n    switch (type) {\n      case Boolean:\n        return value !== null;\n      case Number:\n        return value === null ? null : Number(value);\n      case Object:\n      case Array:\n        return JSON.parse(value!);\n    }\n    return value;\n  }\n\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual\n};\n\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\ntype UpdateState = typeof STATE_HAS_UPDATED|typeof STATE_UPDATE_REQUESTED|\n    typeof STATE_IS_REFLECTING_TO_ATTRIBUTE|\n    typeof STATE_IS_REFLECTING_TO_PROPERTY;\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport abstract class UpdatingElement extends HTMLElement {\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   */\n  private static _attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static[finalized] = true;\n\n  /**\n   * Memoized list of all class properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   */\n  private static _classProperties?: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring the property.\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this._classProperties!.forEach((v, p) => {\n      const attr = this._attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this._attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Ensures the private `_classProperties` property metadata is created.\n   * In addition to `finalize` this is also called in `createProperty` to\n   * ensure the `@property` decorator can add property metadata.\n   */\n  /** @nocollapse */\n  private static _ensureClassProperties() {\n    // ensure private storage for property declarations.\n    if (!this.hasOwnProperty(\n            JSCompiler_renameProperty('_classProperties', this))) {\n      this._classProperties = new Map();\n      // NOTE: Workaround IE11 not supporting Map constructor argument.\n      const superProperties: PropertyDeclarationMap =\n          Object.getPrototypeOf(this)._classProperties;\n      if (superProperties !== undefined) {\n        superProperties.forEach(\n            (v: PropertyDeclaration, k: PropertyKey) =>\n                this._classProperties!.set(k, v));\n      }\n    }\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a PropertyDeclaration for the property with the given options.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   *\n   * @nocollapse\n   */\n  static createProperty(\n      name: PropertyKey,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure storage exists for property\n    // metadata.\n    this._ensureClassProperties();\n    this._classProperties!.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n      return;\n    }\n    const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n    const descriptor = this.getPropertyDescriptor(name, key, options);\n    if (descriptor !== undefined) {\n      Object.defineProperty(this.prototype, name, descriptor);\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   *   class MyElement extends LitElement {\n   *     static getPropertyDescriptor(name, key, options) {\n   *       const defaultDescriptor =\n   *           super.getPropertyDescriptor(name, key, options);\n   *       const setter = defaultDescriptor.set;\n   *       return {\n   *         get: defaultDescriptor.get,\n   *         set(value) {\n   *           setter.call(this, value);\n   *           // custom action.\n   *         },\n   *         configurable: true,\n   *         enumerable: true\n   *       }\n   *     }\n   *   }\n   *\n   * @nocollapse\n   */\n  protected static getPropertyDescriptor(\n      name: PropertyKey, key: string|symbol, _options: PropertyDeclaration) {\n    return {\n      // tslint:disable-next-line:no-any no symbol in index\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: UpdatingElement, value: unknown) {\n        const oldValue =\n            (this as {} as {[key: string]: unknown})[name as string];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as UpdatingElement)._requestUpdate(name, oldValue);\n      },\n      configurable: true,\n      enumerable: true\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a PropertyDeclaration via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override `createProperty`.\n   *\n   * @nocollapse\n   * @final\n   */\n  protected static getPropertyOptions(name: PropertyKey) {\n    return this._classProperties && this._classProperties.get(name) ||\n        defaultPropertyDeclaration;\n  }\n\n  /**\n   * Creates property accessors for registered properties and ensures\n   * any superclasses are also finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this);\n    if (!superCtor.hasOwnProperty(finalized)) {\n      superCtor.finalize();\n    }\n    this[finalized] = true;\n    this._ensureClassProperties();\n    // initialize Map populated in observedAttributes\n    this._attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...(typeof Object.getOwnPropertySymbols === 'function') ?\n            Object.getOwnPropertySymbols(props) :\n            []\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeSript lack of support for symbol in\n        // index types\n        // tslint:disable-next-line:no-any no symbol in index\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n  }\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static _attributeNameForProperty(\n      name: PropertyKey, options: PropertyDeclaration) {\n    const attribute = options.attribute;\n    return attribute === false ?\n        undefined :\n        (typeof attribute === 'string' ?\n             attribute :\n             (typeof name === 'string' ? name.toLowerCase() : undefined));\n  }\n\n  /**\n   * Returns true if a property should request an update.\n   * Called when a property value is set and uses the `hasChanged`\n   * option for the property if present or a strict identity check.\n   * @nocollapse\n   */\n  private static _valueHasChanged(\n      value: unknown, old: unknown, hasChanged: HasChanged = notEqual) {\n    return hasChanged(value, old);\n  }\n\n  /**\n   * Returns the property value for the given attribute value.\n   * Called via the `attributeChangedCallback` and uses the property's\n   * `converter` or `converter.fromAttribute` property option.\n   * @nocollapse\n   */\n  private static _propertyValueFromAttribute(\n      value: string|null, options: PropertyDeclaration) {\n    const type = options.type;\n    const converter = options.converter || defaultConverter;\n    const fromAttribute =\n        (typeof converter === 'function' ? converter : converter.fromAttribute);\n    return fromAttribute ? fromAttribute(value, type) : value;\n  }\n\n  /**\n   * Returns the attribute value for the given property value. If this\n   * returns undefined, the property will *not* be reflected to an attribute.\n   * If this returns null, the attribute will be removed, otherwise the\n   * attribute will be set to the value.\n   * This uses the property's `reflect` and `type.toAttribute` property options.\n   * @nocollapse\n   */\n  private static _propertyValueToAttribute(\n      value: unknown, options: PropertyDeclaration) {\n    if (options.reflect === undefined) {\n      return;\n    }\n    const type = options.type;\n    const converter = options.converter;\n    const toAttribute =\n        converter && (converter as ComplexAttributeConverter).toAttribute ||\n        defaultConverter.toAttribute;\n    return toAttribute!(value, type);\n  }\n\n  private _updateState: UpdateState = 0;\n  private _instanceProperties: PropertyValues|undefined = undefined;\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private _updatePromise =\n      new Promise((res) => this._enableUpdatingResolver = res);\n  private _enableUpdatingResolver: (() => void)|undefined;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   */\n  private _changedProperties: PropertyValues = new Map();\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private _reflectingProperties: Map<PropertyKey, PropertyDeclaration>|\n      undefined = undefined;\n\n  constructor() {\n    super();\n    this.initialize();\n  }\n\n  /**\n   * Performs element initialization. By default captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    this._saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this._requestUpdate();\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private _saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof UpdatingElement)\n        ._classProperties!.forEach((_v, p) => {\n          if (this.hasOwnProperty(p)) {\n            const value = this[p as keyof this];\n            delete this[p as keyof this];\n            if (!this._instanceProperties) {\n              this._instanceProperties = new Map();\n            }\n            this._instanceProperties.set(p, value);\n          }\n        });\n  }\n\n  /**\n   * Applies previously saved instance properties.\n   */\n  private _applyInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    // tslint:disable-next-line:no-any\n    this._instanceProperties!.forEach((v, p) => (this as any)[p] = v);\n    this._instanceProperties = undefined;\n  }\n\n  connectedCallback() {\n    // Ensure first connection completes an update. Updates cannot complete\n    // before connection.\n    this.enableUpdating();\n  }\n\n  protected enableUpdating() {\n    if (this._enableUpdatingResolver !== undefined) {\n      this._enableUpdatingResolver();\n      this._enableUpdatingResolver = undefined;\n    }\n  }\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   */\n  disconnectedCallback() {\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   */\n  attributeChangedCallback(name: string, old: string|null, value: string|null) {\n    if (old !== value) {\n      this._attributeToProperty(name, value);\n    }\n  }\n\n  private _propertyToAttribute(\n      name: PropertyKey, value: unknown,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const attr = ctor._attributeNameForProperty(name, options);\n    if (attr !== undefined) {\n      const attrValue = ctor._propertyValueToAttribute(value, options);\n      // an undefined value does not change the attribute.\n      if (attrValue === undefined) {\n        return;\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n    }\n  }\n\n  private _attributeToProperty(name: string, value: string|null) {\n    // Use tracking info to avoid deserializing attribute value if it was\n    // just set from a property setter.\n    if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n      return;\n    }\n    const ctor = (this.constructor as typeof UpdatingElement);\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    // tslint:disable-next-line:no-unnecessary-type-assertion\n    const propName = (ctor._attributeToPropertyMap as AttributeMap).get(name);\n    if (propName !== undefined) {\n      const options = ctor.getPropertyOptions(propName);\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n      this[propName as keyof this] =\n          // tslint:disable-next-line:no-any\n          ctor._propertyValueFromAttribute(value, options) as any;\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n    }\n  }\n\n  /**\n   * This private version of `requestUpdate` does not access or return the\n   * `updateComplete` promise. This promise can be overridden and is therefore\n   * not free to access.\n   */\n  private _requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      const ctor = this.constructor as typeof UpdatingElement;\n      const options = ctor.getPropertyOptions(name);\n      if (ctor._valueHasChanged(\n              this[name as keyof this], oldValue, options.hasChanged)) {\n        if (!this._changedProperties.has(name)) {\n          this._changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true &&\n            !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n          if (this._reflectingProperties === undefined) {\n            this._reflectingProperties = new Map();\n          }\n          this._reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n      this._updatePromise = this._enqueueUpdate();\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should\n   * be called when an element should update based on some state not triggered\n   * by setting a property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored. Returns the `updateComplete` Promise which is resolved\n   * when the update completes.\n   *\n   * @param name {PropertyKey} (optional) name of requesting property\n   * @param oldValue {any} (optional) old value of requesting property\n   * @returns {Promise} A Promise that is resolved when the update completes.\n   */\n  requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    this._requestUpdate(name, oldValue);\n    return this.updateComplete;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async _enqueueUpdate() {\n    this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this._updatePromise;\n    } catch (e) {\n      // Ignore any previous errors. We only care that the previous cycle is\n      // done. Any error should have been handled in the previous update.\n    }\n    const result = this.performUpdate();\n    // If `performUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this._hasRequestedUpdate;\n  }\n\n  private get _hasRequestedUpdate() {\n    return (this._updateState & STATE_UPDATE_REQUESTED);\n  }\n\n  protected get hasUpdated() {\n    return (this._updateState & STATE_HAS_UPDATED);\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * You can override this method to change the timing of updates. If this\n   * method is overridden, `super.performUpdate()` must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```\n   * protected async performUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.performUpdate();\n   * }\n   * ```\n   */\n  protected performUpdate(): void|Promise<unknown> {\n    // Mixin instance properties once, if they exist.\n    if (this._instanceProperties) {\n      this._applyInstanceProperties();\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.update(changedProperties);\n      } else {\n        this._markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this._markUpdated();\n      throw e;\n    }\n    if (shouldUpdate) {\n      if (!(this._updateState & STATE_HAS_UPDATED)) {\n        this._updateState = this._updateState | STATE_HAS_UPDATED;\n        this.firstUpdated(changedProperties);\n      }\n      this.updated(changedProperties);\n    }\n  }\n\n  private _markUpdated() {\n    this._changedProperties = new Map();\n    this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `_getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super._getUpdateComplete()`, then any subsequent state.\n   *\n   * @returns {Promise} The Promise returns a boolean that indicates if the\n   * update resolved without triggering another update.\n   */\n  get updateComplete() {\n    return this._getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   *   class MyElement extends LitElement {\n   *     async _getUpdateComplete() {\n   *       await super._getUpdateComplete();\n   *       await this._myChild.updateComplete;\n   *     }\n   *   }\n   */\n  protected _getUpdateComplete() {\n    return this._updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this._reflectingProperties !== undefined &&\n        this._reflectingProperties.size > 0) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this._reflectingProperties.forEach(\n          (v, k) => this._propertyToAttribute(k, this[k as keyof this], v));\n      this._reflectingProperties = undefined;\n    }\n    this._markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected updated(_changedProperties: PropertyValues) {\n  }\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {LitElement} from '../lit-element.js';\n\nimport {PropertyDeclaration, UpdatingElement} from './updating-element.js';\n\nexport type Constructor<T> = {\n  // tslint:disable-next-line:no-any\n  new (...args: any[]): T\n};\n\n// From the TC39 Decorators proposal\ninterface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\ninterface ClassElement {\n  kind: 'field'|'method';\n  key: PropertyKey;\n  placement: 'static'|'prototype'|'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nconst legacyCustomElement =\n    (tagName: string, clazz: Constructor<HTMLElement>) => {\n      window.customElements.define(tagName, clazz);\n      // Cast as any because TS doesn't recognize the return type as being a\n      // subtype of the decorated class when clazz is typed as\n      // `Constructor<HTMLElement>` for some reason.\n      // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n      // applied to elements however.\n      // tslint:disable-next-line:no-any\n      return clazz as any;\n    };\n\nconst standardCustomElement =\n    (tagName: string, descriptor: ClassDescriptor) => {\n      const {kind, elements} = descriptor;\n      return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz: Constructor<HTMLElement>) {\n          window.customElements.define(tagName, clazz);\n        }\n      };\n    };\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n *\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName: string) =>\n    (classOrDescriptor: Constructor<HTMLElement>|ClassDescriptor) =>\n        (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\n\nconst standardProperty =\n    (options: PropertyDeclaration, element: ClassElement) => {\n      // When decorating an accessor, pass it through and add property metadata.\n      // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n      // stomp over the user's accessor.\n      if (element.kind === 'method' && element.descriptor &&\n          !('value' in element.descriptor)) {\n        return {\n          ...element,\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      } else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n          kind: 'field',\n          key: Symbol(),\n          placement: 'own',\n          descriptor: {},\n          // When @babel/plugin-proposal-decorators implements initializers,\n          // do this instead of the initializer below. See:\n          // https://github.com/babel/babel/issues/9260 extras: [\n          //   {\n          //     kind: 'initializer',\n          //     placement: 'own',\n          //     initializer: descriptor.initializer,\n          //   }\n          // ],\n          initializer(this: {[key: string]: unknown}) {\n            if (typeof element.initializer === 'function') {\n              this[element.key as string] = element.initializer.call(this);\n            }\n          },\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      }\n    };\n\nconst legacyProperty =\n    (options: PropertyDeclaration, proto: Object, name: PropertyKey) => {\n      (proto.constructor as typeof UpdatingElement)\n          .createProperty(name, options);\n    };\n\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the internalProperty decorator.\n *\n * @example\n *\n *     class MyElement {\n *       @property({ type: Boolean })\n *       clicked = false;\n *     }\n *\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // tslint:disable-next-line:no-any decorator\n  return (protoOrDescriptor: Object|ClassElement, name?: PropertyKey): any =>\n             (name !== undefined) ?\n      legacyProperty(options!, protoOrDescriptor as Object, name) :\n      standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n\nexport interface InternalPropertyDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n */\nexport function internalProperty(options?: InternalPropertyDeclaration) {\n  return property({attribute: false, hasChanged: options?.hasChanged});\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n *     class MyElement {\n *       @query('#first')\n *       first;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n *\n */\nexport function query(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n *     class MyElement {\n *       @queryAsync('#first')\n *       first;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n *\n *     // external usage\n *     async doSomethingWithFirst() {\n *      (await aMyElement.first).doSomething();\n *     }\n */\nexport function queryAsync(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      async get(this: LitElement) {\n        await this.updateComplete;\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n *\n *     class MyElement {\n *       @queryAll('div')\n *       divs;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n */\nexport function queryAll(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelectorAll(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\nconst legacyQuery =\n    (descriptor: PropertyDescriptor, proto: Object, name: PropertyKey) => {\n      Object.defineProperty(proto, name, descriptor);\n    };\n\nconst standardQuery = (descriptor: PropertyDescriptor, element: ClassElement) =>\n    ({\n      kind: 'method',\n      placement: 'prototype',\n      key: element.key,\n      descriptor,\n    });\n\nconst standardEventOptions =\n    (options: AddEventListenerOptions, element: ClassElement) => {\n      return {\n        ...element,\n        finisher(clazz: typeof UpdatingElement) {\n          Object.assign(\n              clazz.prototype[element.key as keyof UpdatingElement], options);\n        }\n      };\n    };\n\nconst legacyEventOptions =\n    // tslint:disable-next-line:no-any legacy decorator\n    (options: AddEventListenerOptions, proto: any, name: PropertyKey) => {\n      Object.assign(proto[name], options);\n    };\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *       clicked = false;\n *\n *       render() {\n *         return html`\n *           <div @click=${this._onClick}`>\n *             <button></button>\n *           </div>\n *         `;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport function eventOptions(options: AddEventListenerOptions) {\n  // Return value typed as any to prevent TypeScript from complaining that\n  // standard decorator function signature does not match TypeScript decorator\n  // signature\n  // TODO(kschaaf): unclear why it was only failing on this decorator and not\n  // the others\n  return ((protoOrDescriptor: Object|ClassElement, name?: string) =>\n              (name !== undefined) ?\n              legacyEventOptions(options, protoOrDescriptor as Object, name) :\n              standardEventOptions(\n                  options, protoOrDescriptor as ClassElement)) as\n             // tslint:disable-next-line:no-any decorator\n             any;\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n */\nexport function queryAssignedNodes(\n    slotName: string = '', flatten: boolean = false) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        const selector = `slot${slotName ? `[name=${slotName}]` : ''}`;\n        const slot = this.renderRoot.querySelector(selector);\n        return slot && (slot as HTMLSlotElement).assignedNodes({flatten});\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const supportsAdoptingStyleSheets =\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\n\nconst constructionToken = Symbol();\n\nexport class CSSResult {\n  _styleSheet?: CSSStyleSheet|null;\n\n  readonly cssText: string;\n\n  constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n          'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet|null {\n    if (this._styleSheet === undefined) {\n      // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n      // is constructable.\n      if (supportsAdoptingStyleSheets) {\n        this._styleSheet = new CSSStyleSheet();\n        this._styleSheet.replaceSync(this.cssText);\n      } else {\n        this._styleSheet = null;\n      }\n    }\n    return this._styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) => {\n  return new CSSResult(String(value), constructionToken);\n};\n\nconst textFromCSSResult = (value: CSSResult|number) => {\n  if (value instanceof CSSResult) {\n    return value.cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n        `Value passed to 'css' function must be a 'css' function result: ${\n            value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n  }\n};\n\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css =\n    (strings: TemplateStringsArray, ...values: (CSSResult|number)[]) => {\n      const cssText = values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]);\n      return new CSSResult(cssText, constructionToken);\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport {render, ShadyRenderOptions} from 'lit-html/lib/shady-render.js';\n\nimport {PropertyValues, UpdatingElement} from './lib/updating-element.js';\n\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport {html, svg, TemplateResult, SVGTemplateResult} from 'lit-html/lit-html.js';\nimport {supportsAdoptingStyleSheets, CSSResult} from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n\ndeclare global {\n  interface Window {\n    litElementVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.3.1');\n\nexport interface CSSResultArray extends Array<CSSResult|CSSResultArray> {}\n\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n\nexport class LitElement extends UpdatingElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See updating-element.ts for more information.\n   */\n  protected static['finalized'] = true;\n\n  /**\n   * Render method used to render the value to the element's DOM.\n   * @param result The value to render.\n   * @param container Node into which to render.\n   * @param options Element name.\n   * @nocollapse\n   */\n  static render:\n      (result: unknown, container: Element|DocumentFragment,\n       options: ShadyRenderOptions) => void = render;\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static styles?: CSSResult|CSSResultArray;\n\n  private static _styles: CSSResult[]|undefined;\n\n  /**\n   * Return the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * @nocollapse\n   */\n  static getStyles(): CSSResult|CSSResultArray|undefined {\n    return this.styles;\n  }\n\n  /** @nocollapse */\n  private static _getUniqueStyles() {\n    // Only gather styles once per class\n    if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n      return;\n    }\n    // Take care not to call `this.getStyles()` multiple times since this\n    // generates new CSSResults each time.\n    // TODO(sorvell): Since we do not cache CSSResults by input, any\n    // shared styles will generate new stylesheet objects, which is wasteful.\n    // This should be addressed when a browser ships constructable\n    // stylesheets.\n    const userStyles = this.getStyles();\n    if (userStyles === undefined) {\n      this._styles = [];\n    } else if (Array.isArray(userStyles)) {\n      // De-duplicate styles preserving the _last_ instance in the set.\n      // This is a performance optimization to avoid duplicated styles that can\n      // occur especially when composing via subclassing.\n      // The last item is kept to try to preserve the cascade order with the\n      // assumption that it's most important that last added styles override\n      // previous styles.\n      const addStyles =\n          (styles: CSSResultArray, set: Set<CSSResult>): Set<CSSResult> =>\n              styles.reduceRight(\n                  (set: Set<CSSResult>, s) =>\n                      // Note: On IE set.add() does not return the set\n                  Array.isArray(s) ? addStyles(s, set) : (set.add(s), set),\n                  set);\n      // Array.from does not work on Set in IE, otherwise return\n      // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n      const set = addStyles(userStyles, new Set<CSSResult>());\n      const styles: CSSResult[] = [];\n      set.forEach((v) => styles.unshift(v));\n      this._styles = styles;\n    } else {\n      this._styles = [userStyles];\n    }\n  }\n\n  private _needsShimAdoptedStyleSheets?: boolean;\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   */\n  readonly renderRoot!: Element|DocumentFragment;\n\n  /**\n   * Performs element initialization. By default this calls `createRenderRoot`\n   * to create the element `renderRoot` node and captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    super.initialize();\n    (this.constructor as typeof LitElement)._getUniqueStyles();\n    (this as {renderRoot: Element | DocumentFragment}).renderRoot =\n        this.createRenderRoot();\n    // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n    // element's getRootNode(). While this could be done, we're choosing not to\n    // support this now since it would require different logic around de-duping.\n    if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n      this.adoptStyles();\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   * @returns {Element|DocumentFragment} Returns a node into which to render.\n   */\n  protected createRenderRoot(): Element|ShadowRoot {\n    return this.attachShadow({mode: 'open'});\n  }\n\n  /**\n   * Applies styling to the element shadowRoot using the `static get styles`\n   * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n   * available and will fallback otherwise. When Shadow DOM is polyfilled,\n   * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n   * is available but `adoptedStyleSheets` is not, styles are appended to the\n   * end of the `shadowRoot` to [mimic spec\n   * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n   */\n  protected adoptStyles() {\n    const styles = (this.constructor as typeof LitElement)._styles!;\n    if (styles.length === 0) {\n      return;\n    }\n    // There are three separate cases here based on Shadow DOM support.\n    // (1) shadowRoot polyfilled: use ShadyCSS\n    // (2) shadowRoot.adoptedStyleSheets available: use it.\n    // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n    // rendering\n    if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n      window.ShadyCSS.ScopingShim!.prepareAdoptedCssText(\n          styles.map((s) => s.cssText), this.localName);\n    } else if (supportsAdoptingStyleSheets) {\n      (this.renderRoot as ShadowRoot).adoptedStyleSheets =\n          styles.map((s) => s.styleSheet!);\n    } else {\n      // This must be done after rendering so the actual style insertion is done\n      // in `update`.\n      this._needsShimAdoptedStyleSheets = true;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // Note, first update/render handles styleElement so we only call this if\n    // connected after first update.\n    if (this.hasUpdated && window.ShadyCSS !== undefined) {\n      window.ShadyCSS.styleElement(this);\n    }\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const templateResult = this.render();\n    super.update(changedProperties);\n    // If render is not implemented by the component, don't call lit-html render\n    if (templateResult !== renderNotImplemented) {\n      (this.constructor as typeof LitElement)\n          .render(\n              templateResult,\n              this.renderRoot,\n              {scopeName: this.localName, eventContext: this});\n    }\n    // When native Shadow DOM is used but adoptedStyles are not supported,\n    // insert styling after rendering to ensure adoptedStyles have highest\n    // priority.\n    if (this._needsShimAdoptedStyleSheets) {\n      this._needsShimAdoptedStyleSheets = false;\n      (this.constructor as typeof LitElement)._styles!.forEach((s) => {\n        const style = document.createElement('style');\n        style.textContent = s.cssText;\n        this.renderRoot.appendChild(style);\n      });\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's NodePart - typically a TemplateResult.\n   * Setting properties inside this method will *not* trigger the element to\n   * update.\n   */\n  protected render(): unknown {\n    return renderNotImplemented;\n  }\n}\n","import { css, html, LitElement } from 'lit-element';\n\nclass LogoSpinner extends LitElement {\n    static get properties() {\n        return {\n            status: {\n                type: String\n            },\n        }\n    }\n\n\n    constructor() {\n        super();\n        this.myStatus = '';\n    }\n\n\n    static get styles() {\n        return css `\n        :host{\n            --logo-height: 7.750em;\n            --logo-witdh: 7.750em;\n            --point-color: rgb(10,27,96);\n            --primary-line-color: rgb(70,81,135);\n            --secondary-line-color: rgb(159,216,233);\n            --terciary-line-color: rgb(251,226,84);\n            height: var(--myCustomHeight, var(--logo-height , 7.750em));\n            width: var(--myCustomwidth, var(--logo-witdh , 7.750em));\n        }\n        .atom-spinner, .atom-spinner * {\n            box-sizing: border-box;\n          }\n        \n          .atom-spinner {\n            height: var(--myCustomHeight,var(--logo-height , 7.750em));\n            width: var(--myCustomwidth,var(--logo-witdh , 7.750em));\n            overflow: hidden;\n        \n          }\n        \n          .atom-spinner .spinner-inner {\n            position: relative;\n            display: block;\n            height: 100%;\n            width: 100%;\n          }\n        \n          .atom-spinner .spinner-circle {\n            display: block;\n            position: absolute;\n            color: var(--point-color);\n            font-size: var(--myCustomPoint, 1.5em);\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n          }\n        \n          .atom-spinner .spinner-line {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            border-radius: 50%;\n            animation-duration: 1s;\n            border-left-width: calc(var(--myCustomHeight,var(--logo-height , 7.750em;)) / 12);\n            border-top-width: calc(var(--myCustomHeight,var(--logo-height , 7.750em;)) / 12);\n            border-left-color: #000;\n            border-left-style: solid;\n            border-top-style: solid;\n            border-top-color: transparent;\n          }\n\n\n        \n          .atom-spinner .spinner-line:nth-child(1) {\n            border-left-color: var(--primary-line-color);\n            transform: rotateZ(120deg) rotateX(66deg) rotateZ(0deg);\n          }\n        \n         .atom-spinner .spinner-line:nth-child(2) {\n            border-left-color: var(--secondary-line-color);\n            transform: rotateZ(240deg) rotateX(66deg) rotateZ(0deg);\n          }\n        \n        .atom-spinner .spinner-line:nth-child(3) {\n            border-left-color: var(--terciary-line-color);\n            transform: rotateZ(360deg) rotateX(66deg) rotateZ(0deg);\n          }\n        \n        \n        \n        \n          .atom-spinner[status=\"active\"] .spinner-line:nth-child(1) {\n            animation: atom-spinner-animation-1 1s linear infinite;\n            \n          }\n        \n          .atom-spinner[status=\"active\"] .spinner-line:nth-child(2) {\n            animation: atom-spinner-animation-2 1s linear infinite;\n          }\n        \n          .atom-spinner[status=\"active\"] .spinner-line:nth-child(3) {\n            animation: atom-spinner-animation-3 1s linear infinite;\n          }\n        \n          @keyframes atom-spinner-animation-1 {\n            100% {\n              transform: rotateZ(120deg) rotateX(66deg) rotateZ(360deg);\n            }\n          }\n        \n          @keyframes atom-spinner-animation-2 {\n            100% {\n              transform: rotateZ(240deg) rotateX(66deg) rotateZ(360deg);\n            }\n          }\n        \n          @keyframes atom-spinner-animation-3 {\n            100% {\n              transform: rotateZ(360deg) rotateX(66deg) rotateZ(360deg);\n            }\n          }\n        \n        \n        \n        `;\n    }\n\n    render() {\n        return html `\n       <div class=\"atom-spinner\" status=\"${this.status}\">\n            <div class=\"spinner-inner\">\n                <div class=\"spinner-line\" ></div>\n                <div class=\"spinner-line\" ></div>\n                <div class=\"spinner-line\" ></div>\n                <div class=\"spinner-circle\">\n                    &#9679;\n                </div>\n            </div>\n        </div>\n        `\n    }\n}\n\ncustomElements.define('logo-spinner', LogoSpinner);","import {\n    css,\n} from 'lit-element';\n\nconst fontscss = css `\n\n[class^=\"icon-\"], [class*=\" icon-\"] {\n    /* use !important to prevent issues with browser extensions that change fonts */\n    font-family: 'icomoon' !important;\n    speak: never;\n    font-style: normal;\n    font-weight: normal;\n    font-variant: normal;\n    text-transform: none;\n    line-height: 1;\n  \n    /* Better Font Rendering =========== */\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n.icon-facebook .path1:before {\n    content: \"\\\\e900\";\n    color: rgb(59, 89, 152);\n  }\n  .icon-facebook .path2:before {\n    content: \"\\\\e901\";\n    margin-left: -1em;\n    color: rgb(255, 255, 255);\n  }\n  .icon-google-mas .path1:before {\n    content: \"\\\\e902\";\n    color: rgb(220, 78, 65);\n  }\n  .icon-google-mas .path2:before {\n    content: \"\\\\e903\";\n    margin-left: -1em;\n    color: rgb(220, 78, 65);\n  }\n  .icon-google-mas .path3:before {\n    content: \"\\\\e904\";\n    margin-left: -1em;\n    color: rgb(220, 78, 65);\n  }\n  .icon-google-mas .path4:before {\n    content: \"\\\\e905\";\n    margin-left: -1em;\n    color: rgb(255, 255, 255);\n  }\n  .icon-google-mas .path5:before {\n    content: \"\\\\e906\";\n    margin-left: -1em;\n    color: rgb(255, 255, 255);\n  }\n  .icon-twitter .path1:before {\n    content: \"\\\\e907\";\n    color: rgb(85, 172, 238);\n  }\n  .icon-twitter .path2:before {\n    content: \"\\\\e908\";\n    margin-left: -1em;\n    color: rgb(241, 242, 242);\n  }\n  .icon-linkedin .path1:before {\n    content: \"\\\\e909\";\n    color: rgb(0, 122, 185);\n  }\n  .icon-linkedin .path2:before {\n    content: \"\\\\e90a\";\n    margin-left: -1em;\n    color: rgb(241, 242, 242);\n  }\n  .icon-calendar:before {\n    content: \"\\\\e953\";\n  }\n  .icon-spoon-knife:before {\n    content: \"\\\\e9a3\";\n  }\n  .icon-rocket:before {\n    content: \"\\\\e9a5\";\n  }\n  .icon-clipboard:before {\n    content: \"\\\\e9b8\";\n  }\n  \n  `;\n\nexport default fontscss;","import {\n    css,\n    html,\n    LitElement\n} from 'lit-element';\nimport '../elements/logoSpinner.js';\n\nimport fontscss from '../helpers/fontsStyles.js'\n\n\nexport class HomePage extends LitElement {\n    static get properties() {\n        return {\n            status: {\n                type: String\n            },\n            user: {\n                type: String\n            },\n            password: {\n                type: String\n            }\n        }\n    }\n\n    constructor() {\n        super();\n        this.status = 'inactive';\n        this.user = '';\n        this.password = '';\n\n    }\n\n    static get styles() {\n        return [fontscss, css `\n        :host{\n            min-height: 100%;\n            display: grid;\n            grid-template-rows: 1fr auto;\n            grid-template-columns: 100%;\n            position: relative;\n        }\n        main{\n            display:flex;\n            align-items: center;\n            justify-content: center;\n        }\n\n        footer {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 6em;\n        }\n        \n        .content{\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            text-align: center;\n            letter-spacing: 2px;\n        }\n\n        .content h1{\n            font-family: 'Ultra', serif;\n            text-transform: uppercase;\n            color: rgb(10,27,96);\n            font-size: 3em;\n        }\n\n        .content span{\n            font-family: 'Shadows Into Light', cursive;\n            font-size: 2em;\n            color: rgb(10,27,96);\n        }\n\n        .btn{\n            text-decoration:none;\n            font-weight: 600;\n            font-size: 20px;\n            color:#333333;\n            padding-top:15px;\n            padding-bottom:15px;\n            padding-left:40px;\n            padding-right:40px;\n            background-color:blue;\n            border-radius:35px;\n        }\n\n        button {\n            position: relative;\n            display: inline-block;\n            cursor: pointer;\n            outline: none;\n            border: 0;\n            vertical-align: middle;\n            text-decoration: none;\n            background: transparent;\n            padding: 0;\n            font-size: inherit;\n            font-family: inherit;\n        }\n        button.singIn {\n            width: 12rem;\n            height: auto;\n        }\n        button.singIn .circle {\n            -webkit-transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\n            transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\n            position: relative;\n            display: block;\n            margin: 0;\n            width: 3rem;\n            height: 3rem;\n            background: rgb(10, 27, 96);\n            border-radius: 1.625rem;\n        }\n        button.singIn .circle .icon {\n            -webkit-transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\n            transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            margin: auto;\n            background: #fff;\n        }\n        button.singIn .circle .icon.arrow {\n            -webkit-transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\n            transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\n            left: 0.625rem;\n            width: 1.125rem;\n            height: 0.125rem;\n            background: none;\n        }\n        button.singIn .circle .icon.arrow::before {\n            position: absolute;\n            content: '';\n            top: -0.25rem;\n            right: 0.0625rem;\n            width: 0.625rem;\n            height: 0.625rem;\n            border-top: 0.125rem solid #fff;\n            border-right: 0.125rem solid #fff;\n            -webkit-transform: rotate(45deg);\n                    transform: rotate(45deg);\n        }\n        button.singIn .button-text {\n            -webkit-transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\n            transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            padding: 0.75rem 0;\n            margin: 0 0 0 1.85rem;\n            color: rgb(10, 27, 96);\n            font-weight: 700;\n            line-height: 1.6;\n            text-align: center;\n            text-transform: uppercase;\n        }\n        button:hover .circle {\n            width: 100%;\n        }\n        button:hover .circle .icon.arrow {\n            background: #fff;\n            -webkit-transform: translate(1rem, 0);\n                    transform: translate(1rem, 0);\n        }\n        button:hover .button-text {\n            color: #fff;\n        }\n        .modal{\n            position:absolute;\n            top:0;\n            bottom:0;\n            left:0;\n            right:0;\n            padding: 2em;\n            background: #fff;\n            transform: translateY(100%);\n            transition: transform 0.7s;\n            z-index: 1;\n            min-height: 100%;\n            display: grid;\n            grid-template-rows: 1fr auto;\n            grid-template-columns: 100%;\n            box-sizing: border-box;\n        }\n\n        .modal form {\n            display: flex;\n            flex-direction: column; \n        }\n\n        .modal .login-input {\n            border: 1px solid #000;\n            border-radius: 24px;\n            padding: 1em;\n            margin-bottom: 2em;\n        }\n\n        .modal form .password-field{\n            float: right;\n            margin-left: -80px;\n            margin-top: -25px;\n            position: relative;\n            z-index: 2;\n        }\n\n        .modal form .buttons{\n            display: flex;\n            justify-content: space-around;\n            margin-top: 2em;\n        }\n\n        .modal form .button {\n            height: 48px;\n            opacity: 0.95;\n            background: rgb(10, 27, 96);\n            box-shadow: rgba(0, 0, 0, 0.5) 0px 2px 4px 0px, rgba(0, 0, 0, 0.72) 4px 4px 8px 0px;\n            border-radius: 100px;\n            font-family: VarelaRound-Regular;\n            font-size: 16px;\n            color: #fff;\n            letter-spacing: 1px;\n            text-transform: capitalize;\n            width: 8em;\n        }\n\n        .modal .other-logins{\n            height: 8em;\n        }\n\n        .modal.show {\n            transform: translateY(0);\n        }\n\n\n        #share {\n            width: 100%;\n            text-align: center;\n        }\n\n\n        #share .socialbtn{\n            width: 50px;\n            height: 50px;\n            display: inline-block;\n            margin: 8px;\n            border-radius: 50%;\n            font-size: 24px;\n            color: #fff;\n            opacity: 0.75;\n            transition: opacity 0.15s linear;\n        }\n\n        #share .socialbtn:hover {\n            opacity: 1;\n        }\n\n\n        #share i {\n            position: relative;\n            top: 50%;\n            transform: translateY(-50%);\n        }\n\n\n        .facebook {\n            background: #3b5998;\n        }\n\n        .twitter {\n            background: #55acee;\n        }\n\n        .googleplus {\n            background: #dd4b39;\n        }\n\n        .linkedin {\n            background: #0077b5;\n        }\n\n        .pinterest {\n            background: #cb2027;\n        }\n        `];\n    }\n\n    render() {\n        return html `\n        <main>\n            <div class=\"content\">\n                <logo-spinner status=\"${this.status}\"></logo-spinner>\n                <div>\n                    <h1>actíva-T</h1>\n                    <span>libera tu energia</span>\n                </div>\n            </div> \n        </main>\n         <footer>\n         <button class=\"singIn\" @click=\"${this.handleClick}\">\n            <span class=\"circle\" aria-hidden=\"true\">\n            <span class=\"icon arrow\"></span>\n            </span>\n            <span class=\"button-text\">Entra</span>\n        </button>\n         </footer>\n         <div class=\"modal\">\n         <form @submit=\"${this.doLogin}\">\n            <input name=\"username\" id=\"login-username\" class=\"login-input\" type=\"text\" maxlength=\"96\" tabindex=\"1\" aria-required=\"true\"\n            .value=\"${this.user}\" placeholder=\"e-mail\" title=\"e-mail\" @input=\"${this.setValue}\" autocorrect=\"off\" spellcheck=\"false\"  required >\n            <input name=\"password\" id=\"login-password\" class=\"login-input \" type=\"password\" maxlength=\"8\" tabindex=\"1\" aria-required=\"true\"\n            .value=\"${this.password}\" placeholder=\"password\" @input=\"${this.setValue}\" autocorrect=\"off\" spellcheck=\"false\"  required >\n\n            <p id=\"last_line\">\n            <label for=\"show_password\">\n                <input type=\"checkbox\" name=\"show_password\" id=\"show_password\" @click=\"${this.clickShow}\">\n                Show Password\n            </label>\n            </p>\n            <div class=\"buttons\">\n                <button id=\"login-signing\" class=\"button \" type=\"submit\" value=\"Submit\" tabindex=\"1\">Login</button>\n                <button id=\"login-signing\" class=\"button \" tabindex=\"1\" @click=\"${this.close}\">close</button>\n            </div>\n            <a href=\"/dashboard\"></a>\n         </form>\n\n\n\n         <div class=\"other-logins\">\n         <div id=\"share\">\n            <!-- facebook -->\n            <button  class=\"socialbtn facebook\" ><span class=\"icon-facebook\"><span class=\"path1\"></span><span class=\"path2\"></span></span></a>\n\n            <!-- twitter -->\n            <button class=\"socialbtn twitter\"><span class=\"icon-twitter\"><span class=\"path1\"></span><span class=\"path2\"></span></span></a>\n\n            <!-- google plus -->\n            <button class=\"socialbtn googleplus\"><span class=\"icon-google-mas\"><span class=\"path1\"></span><span class=\"path2\"></span><span class=\"path3\"></span><span class=\"path4\"></span><span class=\"path5\"></span></span></a>\n\n            <!-- linkedin -->\n            <button class=\"socialbtn linkedin\" ><span class=\"icon-linkedin\"><span class=\"path1\"></span><span class=\"path2\"></span></span></a>\n\n            </div>\n         </div>\n         </div>  \n        `\n    }\n\n    handleClick() {\n        this.status = 'active';\n        const node = this.shadowRoot.querySelector('.modal');\n        node.classList.toggle('show');\n    }\n\n    clickShow(e) {\n        const node = this.shadowRoot.querySelector('#login-password');\n        e.target.checked ? node.type = 'text' : node.type = 'password';\n    }\n\n    closeModal() {\n        const node = this.shadowRoot.querySelector('.modal');\n        node.classList.toggle('show');\n    }\n\n    close(e) {\n        this.resetLogo();\n        this.closeModal();\n        setTimeout(() => {\n            debugger;\n            this.resetForm();\n        }, 500);\n\n    }\n\n    resetForm() {\n        this.user = '';\n        this.password = '';\n    }\n\n    resetLogo() {\n        this.status = 'inactive';\n    }\n\n\n    setValue(e) {\n        e.target.name === 'password' ? this.password = e.target.value : this.user = e.target.value;\n    }\n\n    doLogin(event) {\n        if (event) { event.preventDefault(); }\n        this.closeModal();\n        setTimeout(() => {\n            const custom = new CustomEvent('navigation-to', { 'detail': 'dashboard', composed: true, bubbles: true });\n            this.dispatchEvent(custom);\n        }, 1500);\n\n    }\n\n\n}","import { HomePage } from './homePage.js'\n\ncustomElements.define('home-page', HomePage);","import {\n    css,\n    html,\n    LitElement\n} from 'lit-element';\n\nimport fontscss from '../helpers/fontsStyles.js'\n\n\n\nexport class DashboardPage extends LitElement {\n    static get properties() {\n        return {}\n    }\n\n    constructor() {\n        super();\n\n\n    }\n\n    static get styles() {\n        return [fontscss, css `\n        :host {\n            min-height: 100%;\n            display: grid;\n            grid-template-rows: auto 1fr;\n            grid-template-columns: 100%;\n            position: relative;\n            background: #fff;\n            padding: 2em;\n            box-sizing: border-box;\n            --myCustomHeight: 3em;\n            --myCustomwidth: 3em;\n            --myCustomPoint: 1em;\n        }\n\n        header{\n            display: flex;\n            align-items: center;\n            margin-top: 2em;\n            justify-content: space-between;\n        }\n\n        header span {\n            font-family: Ultra, serif;\n            text-transform: uppercase;\n            color: rgb(10, 27, 96);\n            font-size: 2.2em;\n        }\n\n        main {\n            display: flex;\n            flex-direction: column;\n            justify-content: space-evenly;\n            padding: 0 1em 1em;\n        }\n\n        .btn{\n            display: inline-block;\n            padding: 6px 12px 0 0;\n            margin-bottom: 0;\n            font-size: 14px;\n            font-weight: 400;\n            line-height: 1.42857143;\n            text-align: center;\n            white-space: nowrap;\n            vertical-align: middle;\n            -ms-touch-action: manipulation;\n            touch-action: manipulation;\n            cursor: pointer;\n            user-select: none;\n            background-image: none;\n            border: 1px solid transparent;\n            border-radius: 4px;\n            text-align: center;\n            align-content: center;\n            height: 3em;\n            line-height: 38px;\n        }\n\n        .btn-label {\n            position: relative;\n            float:left;\n            display: inline-block;\n            background: rgba(0,0,0,0.15);\n            border-radius: 3px 0 0 3px;\n            line-height: 38px;\n            height: 100%;\n            width: 2.5em;\n        }\n\n        .btn-labeled {color: #fff;\n           \n            padding-top: 0;\n            padding-bottom: 0;}\n\n        .btn-dieta{\n            background-color: #5cb85c;\n            border-color: #4cae4c;\n        }\n\n        .btn-tabla{\n            background-color: #337ab7;\n            border-color: #2e6da4;\n        }\n\n        .btn-obj{\n            background-color: #f0ad4e;\n            border-color: #eea236;\n        }\n\n        .btn-test{\n            background-color: #5bc0de;\n            border-color: #46b8da;\n        }\n        \n        `];\n    }\n\n    render() {\n        return html `\n        <header>\n            <logo-spinner></logo-spinner>\n            <span> actíva-t </span>  \n        </header>\n        <main>\n            <button type=\"button\" class=\"btn btn-labeled btn-dieta\" data-url=\"dieta\" @click=\"${this.handleClick}\">\n            <span class=\"btn-label icon-spoon-knife\"></span>Alimentación</button>\n            <button type=\"button\" class=\"btn btn-labeled btn-tabla\" data-url=\"tabla\" @click=\"${this.handleClick}\"><span class=\"btn-label icon-calendar\"></span>Tabla</button>\n            <button type=\"button\" class=\"btn btn-labeled btn-obj\" data-url=\"obj\" @click=\"${this.handleClick}\"><span class=\"btn-label icon-rocket\"></span>Objetivos</button>\n            <button type=\"button\" class=\"btn btn-labeled btn-test\" data-url=\"test\" @click=\"${this.handleClick}\"><span class=\"btn-label icon-clipboard\"></span>Tests</button>\n        </main>\n        \n        `\n    }\n\n    handleClick(e) {\n        const data = e.target.dataset.url;\n        const custom = new CustomEvent('navigation-to', { 'detail': data, composed: true, bubbles: true });\n        this.dispatchEvent(custom);\n    }\n\n\n}","import { DashboardPage } from './dashboardPage.js';\n\n\ncustomElements.define('dashboard-page', DashboardPage);","import {\n    css,\n    html,\n    LitElement\n} from 'lit-element';\nimport '../elements/logoSpinner.js';\n\nimport fontscss from '../helpers/fontsStyles.js';\n\n\nexport class TestPage extends LitElement {\n    static get properties() {\n        return {\n            items: {\n                type: Array\n            }\n        }\n    }\n\n    constructor() {\n        super();\n        this.items = [\n            { title: \"Sentadillas 1'\", resAnterior: 30, resActual: 41 },\n            { title: \"Pasos de Oso 1'\", resAnterior: 0, resActual: 41 },\n            { title: \"Tablon ISO\", resAnterior: '40', resActual: \"2'20\" },\n            { title: \"Jumping jack 1\", resAnterior: 0, resActual: 87 },\n            { title: \"Flexiones 1'\", resAnterior: 30, resActual: 37 },\n            { title: \"Sentadilla ISO'\", resAnterior: 30, resActual: '43' },\n            { title: \"Abd Rombo 1'\", resAnterior: 30, resActual: 30 },\n            { title: \"Burpees 1'\", resAnterior: 30, resActual: 24 },\n            { title: \"Dominadas 1'\", resAnterior: 0, resActual: 8 },\n            { title: \"Carrera 1'\", resAnterior: \"6'00\", resActual: \"5'11\" },\n            { title: \"Carrera 3'\", resAnterior: 0, resActual: 0 },\n            { title: \"Carrera 5'\", resAnterior: 0, resActual: 0 },\n            { title: \"Dominada ISO'\", resAnterior: 0, resActual: 0 },\n            { title: \"Super Test'\", resAnterior: 0, resActual: \"11'44\" },\n\n        ]\n    }\n\n    static get styles() {\n        return [fontscss, css `\n        :host {\n            min-height: 100%;\n            display: grid;\n            grid-template-rows: auto 1fr auto;\n            grid-template-columns: 100%;\n            position: relative;\n            background: #fff;\n            padding: 2em;\n            box-sizing: border-box;\n            --myCustomHeight: 3em;\n            --myCustomwidth: 3em;\n            --myCustomPoint: 1em;\n        }\n\n        header{\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n        }\n\n        header span {\n            font-family: Ultra, serif;\n            text-transform: uppercase;\n            color: rgb(10, 27, 96);\n            font-size: 2.2em;\n        }\n\n        main {\n            display: flex;\n            flex-direction: column;\n            justify-content: space-evenly;\n            padding: 0 1em 1em;\n        }\n\n        .table{\n            display: flex;\n            justify-content: space-between;\n        }\n\n        .table span {\n            width: 2em;\n            font-family:'Raleway';\n            font-size: 1em;\n            text-align: right;\n        }\n\n        .table span.title {\n            width: 7.75em;\n            text-transform: uppercase;\n            text-align: left;\n        }\n\n        .header{\n            color:rgb(159 216 233)\n        }\n\n        button {\n            position: relative;\n            display: inline-block;\n            cursor: pointer;\n            outline: none;\n            border: 0;\n            vertical-align: middle;\n            text-decoration: none;\n            background: transparent;\n            padding: 0;\n            font-size: inherit;\n            font-family: inherit;\n        }\n        button.singIn {\n            width: 12rem;\n            height: auto;\n        }\n        button.singIn .circle {\n            -webkit-transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\n            transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\n            position: relative;\n            display: block;\n            margin: 0;\n            width: 3rem;\n            height: 3rem;\n            background: rgb(10, 27, 96);\n            border-radius: 1.625rem;\n            transform: rotate(180deg);\n        }\n        button.singIn .circle .icon {\n            -webkit-transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\n            transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            margin: auto;\n            background: #fff;\n        }\n        button.singIn .circle .icon.arrow {\n            -webkit-transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\n            transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\n            left: 0.625rem;\n            width: 1.125rem;\n            height: 0.125rem;\n            background: none;\n        }\n        button.singIn .circle .icon.arrow::before {\n            position: absolute;\n            content: '';\n            top: -0.25rem;\n            right: 0.0625rem;\n            width: 0.625rem;\n            height: 0.625rem;\n            border-top: 0.125rem solid #fff;\n            border-right: 0.125rem solid #fff;\n            -webkit-transform: rotate(45deg);\n                    transform: rotate(45deg);\n        }\n        button.singIn .button-text {\n            -webkit-transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\n            transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            padding: 0.75rem 0;\n            margin: 0 0 0 3.5rem;\n            color: rgb(10, 27, 96);\n            font-weight: 700;\n            line-height: 1.6;\n            text-align: left;\n            text-transform: uppercase;\n        }\n        button:hover .circle {\n            width: 100%;\n        }\n        button:hover .circle .icon.arrow {\n            background: #fff;\n            -webkit-transform: translate(1rem, 0);\n                    transform: translate(1rem, 0);\n        }\n        button:hover .button-text {\n            color: #fff;\n        }\n        `];\n    }\n\n    render() {\n            return html `\n        <header>\n            <logo-spinner></logo-spinner>\n            <span> actíva-t </span>  \n        </header>\n        <main>\n        <div class=\"table\">\n            <span class=\"header title\">Ejercicio</span>\n            <span class=\"header\">Anterior</span>\n            <span class=\"header\">Actual</span>\n        </div>\n        ${this.items.map((i) => html`<div class=\"table\">\n            <span class=\"title\">${i.title}</span>\n            <span>${i.resAnterior}</span>\n            <span>${i.resActual}</span>\n        </div>`)}\n        </main>\n\n        <footer>\n        <button class=\"singIn\" @click=\"${this.handleClick}\">\n            <span class=\"circle\" aria-hidden=\"true\">\n            <span class=\"icon arrow\"></span>\n            </span>\n            <span class=\"button-text\">volver</span>\n        </button>\n        </footer>\n    \n        `\n    }\n\n    handleClick(){\n        const custom = new CustomEvent('navigation-to', { 'detail': 'dashboard', composed: true, bubbles: true });\n         this.dispatchEvent(custom);\n    }\n\n}","import { TestPage } from './testPage.js';\n\ncustomElements.define('test-page', TestPage);","import { Router } from '@vaadin/router';\nimport './pages/home-page.js';\nimport './pages/dashboard-page.js';\nimport './pages/test-page.js';\n\n\nconst outlet = document.getElementById('outlet');\nconst router = new Router(outlet);\n\nrouter.setRoutes(\n    [{\n        path: '/',\n        animate: true,\n        children: [\n            { path: '', component: 'home-page' },\n            { path: '/dashboard', component: 'dashboard-page' },\n            { path: '/test', component: 'test-page' },\n        ]\n    }]\n);\n\noutlet.addEventListener('navigation-to', ({ detail }) => {\n    Router.go(`/${detail}`)\n});"]}